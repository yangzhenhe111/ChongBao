Index: app/src/main/java/com/example/pet/other/Cache.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.other;\r\n\r\nimport com.example.pet.other.entity.Order;\r\nimport com.example.pet.other.entity.Pet;\r\nimport com.example.pet.other.entity.Tips;\r\nimport com.example.pet.other.entity.User;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\n\r\npublic class Cache {\r\n    /**\r\n     * 存储一些全局信息\r\n     */\r\n    public static User user;\r\n    public static String userPhone;\r\n    public static final String MY_URL = \"http://10.7.86.121:8080/\";//我的URL\r\n    public static String url = \"http://10.7.89.96:8080/ChongBao_war_exploded/\";\r\n    public static int user_id = 1;\r\n    public static List<Order> myOrderList;//我的订单数据\r\n    public static List<Pet> myPetList;//我的宠物数据\r\n    public static ArrayList<Tips> myPostList;//我的帖子数据\r\n    public static HashSet<User> userHashSet = new HashSet<>();//用户列表\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/other/Cache.java	(revision 21b7877dd1f66b71d3d154a1f20242410df2a3ee)
+++ app/src/main/java/com/example/pet/other/Cache.java	(date 1607558954861)
@@ -15,7 +15,7 @@
      */
     public static User user;
     public static String userPhone;
-    public static final String MY_URL = "http://10.7.86.121:8080/";//我的URL
+    public static final String MY_URL = "http://10.7.90.171:8080/";//我的URL
     public static String url = "http://10.7.89.96:8080/ChongBao_war_exploded/";
     public static int user_id = 1;
     public static List<Order> myOrderList;//我的订单数据
Index: app/src/main/java/com/example/pet/my/MyDataService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.my;\r\n\r\nimport android.app.IntentService;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.example.pet.other.Cache;\r\nimport com.example.pet.other.entity.Order;\r\nimport  com.example.pet.other.entity.Pet;\r\nimport com.example.pet.other.entity.Tips;\r\nimport com.google.gson.Gson;\r\n\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\n\r\npublic class MyDataService extends IntentService {\r\n    /**\r\n     * Creates an IntentService.  Invoked by your subclass's constructor.\r\n     *\r\n     * @param name Used to name the worker thread, important only for debugging.\r\n     */\r\n    public MyDataService(String name) {\r\n        super(name);\r\n    }\r\n\r\n    public MyDataService() {\r\n        super(\"MyDataService\");\r\n    }\r\n\r\n    @Override\r\n    protected void onHandleIntent(@Nullable Intent intent) {\r\n        //宠物数据下载\r\n\r\n            try{\r\n                if(Cache.myPetList!=null){\r\n                    Cache.myPetList.clear();\r\n                }else{\r\n                    Cache.myPetList = new ArrayList<>();\r\n                }\r\n\r\n                URL url = new URL(Cache.MY_URL+\"MyPet?userId=\"+Cache.user.getUserId());\r\n                InputStream in = url.openStream();\r\n                StringBuilder str = new StringBuilder();\r\n                byte[] bytes = new byte[256];\r\n                int len =0;\r\n                while ((len=in.read(bytes))!=-1){\r\n                    str.append(new String(bytes,0,len,\"utf-8\"));\r\n                }\r\n\r\n                in.close();\r\n                JSONArray jsonArray = new JSONArray(str.toString());\r\n\r\n                for(int i=0;i<jsonArray.length();i++){\r\n                    JSONObject rs = jsonArray.getJSONObject(i);\r\n                    Pet pet= new Gson().fromJson(rs.toString(),Pet.class);\r\n                    Log.e(\"pet\",pet.toString());\r\n//                    pet.setPetId(rs.getInt(\"petId\"));\r\n                    String path =rs.getString(\"picturePath\");\r\n                    URL url1 = new URL(Cache.MY_URL +\"img/\" +path);\r\n                    Log.e(\"url\",url1.toString());\r\n                    InputStream in1 = url1.openStream();\r\n                    Bitmap bitmap = BitmapFactory.decodeStream(in1);\r\n                    pet.setPicture(bitmap);\r\n//                    pet.setPetName(rs.getString(\"petName\"));\r\n//                    pet.setPetType(rs.getString(\"petType\"));\r\n//                    pet.setPetAge(rs.getInt(\"petAge\"));\r\n//                    pet.setPetWeight(rs.getString(\"petWeight\"));\r\n//                    pet.setUserId(rs.getInt(\"userId\"));\r\n//                    pet.setPetAutograph(rs.getString(\"petAutograph\"));\r\n                    Log.e(\"MyDataService\",pet.toString());\r\n                    Cache.myPetList.add(pet);\r\n                    Log.e(\"pet\",\"next\");\r\n                }\r\n\r\n            }catch(IOException | JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            try {\r\n                if(Cache.myOrderList!=null){\r\n                    Cache.myOrderList.clear();\r\n                }else{\r\n                    Cache.myOrderList = new ArrayList<>();\r\n                }\r\n                URL url  = new URL(Cache.MY_URL +\"MyOrder?userId=\"+Cache.user.getUserId());\r\n                InputStream in  = url.openStream();\r\n                StringBuilder str= new StringBuilder();\r\n                byte[] bytes = new byte[256];\r\n                int len =0;\r\n                while ((len = in.read(bytes))!=-1){\r\n                    str.append(new String(bytes,0,len,\"utf-8\"));\r\n\r\n                }\r\n\r\n                in.close();\r\n                JSONArray jsonArray = new JSONArray(str.toString());\r\n                Log.e(\"\",jsonArray.toString());\r\n                Cache.myOrderList = new ArrayList();\r\n                for (int i = 0; i < jsonArray.length(); i++) {\r\n                    JSONObject rs = jsonArray.getJSONObject(i);\r\n                    Order order = new Gson().fromJson(rs.toString(),Order.class);\r\n//                    order.setOrderId(rs.getInt(\"orderId\"));\r\n//                    order.setOrderStart(rs.getString(\"orderStart\"));\r\n//                    order.setOrderEnd(rs.getString(\"orderEnd\"));\r\n                    int id = rs.getInt(\"petId\");\r\n                    for(int j=0;j<Cache.myPetList.size();j++){\r\n                        if(Cache.myPetList.get(j).getPetId() == id){\r\n                            order.setPet(Cache.myPetList.get(j));\r\n                            Log.e(\"MyDataService\",id+ \"gggg\");\r\n\r\n                        }\r\n                    }\r\n                    //设置\r\n//                    order.setAddresser(rs.getString(\"addresser\"));\r\n//                    order.setAddressee(rs.getString(\"addressee\"));\r\n//                    order.setPetShopContact(rs.getString(\"petShopContact\"));\r\n//                    order.setRemarks(rs.getString(\"remarks\"));\r\n//                    order.setOrderAmount(rs.getString(\"orderAmount\"));\r\n//                    order.setClientContact(rs.getString(\"clientContact\"));\r\n//                    order.setRunnerContact(rs.getString(\"runnerContact\"));\r\n//                    order.setRunnerName(rs.getString(\"runnerName\"));\r\n//                    order.setOrderTime(rs.getString(\"orderTime\"));\r\n//                    order.setKilometers(rs.getString(\"kilometers\"));\r\n//                    order.setOrderState(rs.getString(\"orderState\"));\r\n//                    order.setUserId(rs.getInt(\"userId\"));\r\n//                    order.setAddresseeContact(rs.getString(\"addresseeContact\"));\r\n                    Log.e(\"MyDataService\",order.toString());\r\n                    Cache.myOrderList.add(order);\r\n                }\r\n            } catch (IOException | JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n        try {\r\n            if(Cache.myPostList!=null){\r\n                Cache.myPostList.clear();\r\n            }else{\r\n                Cache.myPostList = new ArrayList<>();\r\n            }\r\n            URL url = new URL(Cache.MY_URL+\"MyTip?userId=\"+ Cache.user.getUserId());\r\n            InputStream in  = url.openStream();\r\n            StringBuilder str= new StringBuilder();\r\n            byte[] bytes = new byte[256];\r\n            int len =0;\r\n            while ((len = in.read(bytes))!=-1){\r\n                str.append(new String(bytes,0,len,\"utf-8\"));\r\n            }\r\n\r\n            in.close();\r\n            JSONArray jsonArray = new JSONArray(str.toString());\r\n            Log.e(\"Post\",jsonArray.toString());\r\n            for (int i = 0; i < jsonArray.length(); i++) {\r\n                JSONObject jsonObject = jsonArray.getJSONObject(i);\r\n                int post_id = jsonObject.getInt(\"post_id\");\r\n                String post_title = jsonObject.getString(\"post_title\");\r\n                String post_time = jsonObject.getString(\"post_time\");\r\n                String post_text = jsonObject.getString(\"post_text\");\r\n                String topic = jsonObject.getString(\"post_topic\");\r\n                String user_name = jsonObject.getString(\"user_name\");\r\n                int count_likes = jsonObject.getInt(\"likes\");\r\n                int count_comments = jsonObject.getInt(\"comments\");\r\n                int count_forwards = jsonObject.getInt(\"forwards\");\r\n                String img_path = jsonObject.getString(\"picture_path\");\r\n                String head_img_path = jsonObject.getString(\"user_picture_path\");\r\n                Tips tips = new Tips();\r\n                tips.setId(post_id);\r\n                tips.setTitle(post_title);\r\n                tips.setText(post_text);\r\n                tips.setTime(post_time);\r\n                tips.setUserName(user_name);\r\n                tips.setTopic(topic);\r\n                tips.setLikes(count_likes);\r\n                tips.setComments(count_comments);\r\n                tips.setForwards(count_forwards);\r\n                tips.setImagepath(img_path);\r\n                tips.setHeadImagepath(head_img_path);\r\n                URL url1 = new URL(Cache.MY_URL +\"img/\" +img_path);\r\n                InputStream in1 = url1.openStream();\r\n                Bitmap bitmap = BitmapFactory.decodeStream(in1);\r\n                tips.setThumbnail(bitmap);\r\n                URL url2 = new URL(Cache.MY_URL +\"img/\"+head_img_path);\r\n                InputStream in2 = url2.openStream();\r\n                Bitmap bitmap1 = BitmapFactory.decodeStream(in2);\r\n                tips.setUserHead(bitmap1);\r\n                in1.close();\r\n                in2.close();\r\n                Cache.myPostList.add(tips);\r\n            }\r\n        } catch (MalformedURLException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/my/MyDataService.java	(revision 21b7877dd1f66b71d3d154a1f20242410df2a3ee)
+++ app/src/main/java/com/example/pet/my/MyDataService.java	(date 1607559973101)
@@ -50,6 +50,7 @@
                     Cache.myPetList = new ArrayList<>();
                 }
 
+                Log.e("id:      ",Cache.user.getUserId() + "");
                 URL url = new URL(Cache.MY_URL+"MyPet?userId="+Cache.user.getUserId());
                 InputStream in = url.openStream();
                 StringBuilder str = new StringBuilder();
Index: app/src/main/java/com/example/pet/my/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.my;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.animation.Animator;\r\nimport android.animation.AnimatorSet;\r\nimport android.animation.ObjectAnimator;\r\nimport android.animation.PropertyValuesHolder;\r\nimport android.animation.ValueAnimator;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.AccelerateDecelerateInterpolator;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pet.MainActivity;\r\nimport com.example.pet.R;\r\nimport com.example.pet.other.Cache;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\n\r\npublic class Login extends AppCompatActivity {\r\n    private String phone;\r\n    private View progress;\r\n    private View mInputLayout;\r\n    private TextView login;\r\n    private float mWidth, mHeight;\r\n    private LinearLayout mName, mPsw;\r\n    private EditText etName;\r\n    private EditText etPassword;\r\n    private int back;\r\n    private Handler handler = new Handler() {\r\n        @Override\r\n        public void handleMessage(@NonNull Message msg) {\r\n            switch (msg.what) {\r\n                case 1:\r\n                    mName.setVisibility(View.INVISIBLE);\r\n                    mPsw.setVisibility(View.INVISIBLE);\r\n                    inputAnimator(mInputLayout, mWidth, mHeight);\r\n                    Cache.userPhone = phone;\r\n                    Log.e(\"Login\", \"登录成功\" + Cache.userPhone);\r\n                    Intent intent2 = new Intent(Login.this, MyUserService.class);\r\n                    startService(intent2);\r\n\r\n                    break;\r\n                case 0:\r\n                    Toast.makeText(Login.this, \"密码有误，请重试\", Toast.LENGTH_LONG).show();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        if (Build.VERSION.SDK_INT >= 21) {   //只有5.0及以上系统才支持，因此这里先进行了一层if判断\r\n            View decorView = getWindow().getDecorView();\r\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE    //设置为全屏显示，必须这两行代码一起才能生效\r\n                    | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;  //因为背景为浅色，设置通知栏字体颜色为深色\r\n            decorView.setSystemUiVisibility(option);\r\n            getWindow().setStatusBarColor(Color.TRANSPARENT);//设置为透明\r\n        }\r\n        back =getIntent().getIntExtra(\"back\",1);\r\n        initView();\r\n    }\r\n\r\n    private void initView() {\r\n        login = (TextView) findViewById(R.id.login_btn);\r\n        progress = findViewById(R.id.layout_progress);\r\n        mInputLayout = findViewById(R.id.input_layout);\r\n        mName = (LinearLayout) findViewById(R.id.input_layout_name);\r\n        mPsw = (LinearLayout) findViewById(R.id.input_layout_psw);\r\n        etName = findViewById(R.id.login_et_username);\r\n        etPassword = findViewById(R.id.login_et_password);\r\n    }\r\n\r\n    public void onClicked(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.login_btn:\r\n                mWidth = login.getMeasuredWidth();\r\n                mHeight = login.getMeasuredHeight();\r\n                loginService();\r\n                break;\r\n            case R.id.login_register:\r\n                Intent intent = new Intent(this, Register.class);\r\n                startActivity(intent);\r\n                break;\r\n            case R.id.login_update:\r\n                Intent intent1 = new Intent(this, Update.class);\r\n                startActivity(intent1);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    private void loginService() {\r\n        phone = etName.getText().toString();\r\n        Cache.userPhone = etName.getText().toString();\r\n        final String pwd = etPassword.getText().toString();\r\n        if (phone.length() == 11 && pwd.length() != 0) {\r\n            new Thread() {\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n                        URL url = new URL(Cache.MY_URL + \"LoginServlet?num=\" + phone + \"&pwd=\" + pwd);\r\n                        InputStream in = url.openStream();\r\n                        int num = in.read();\r\n                        Message message = new Message();\r\n                        message.what = num;\r\n                        handler.sendMessage(message);\r\n                        in.close();\r\n                    } catch (MalformedURLException e) {\r\n                        e.printStackTrace();\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            }.start();\r\n        } else {\r\n            Toast.makeText(this, \"输入格式有误\", Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void inputAnimator(final View view, float w, float h) {\r\n        AnimatorSet set = new AnimatorSet();\r\n        ValueAnimator animator = ValueAnimator.ofFloat(0, w);\r\n        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\r\n            @Override\r\n            public void onAnimationUpdate(ValueAnimator animation) {\r\n                float value = (Float) animation.getAnimatedValue();\r\n                ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view\r\n                        .getLayoutParams();\r\n                params.leftMargin = (int) value;\r\n                params.rightMargin = (int) value;\r\n                view.setLayoutParams(params);\r\n            }\r\n        });\r\n        ObjectAnimator animator2 = ObjectAnimator.ofFloat(mInputLayout, \"scaleX\", 1f, 0.5f);\r\n        set.setDuration(4000);\r\n        set.setInterpolator(new AccelerateDecelerateInterpolator());\r\n        set.playTogether(animator, animator2);\r\n        set.start();\r\n        set.addListener(new Animator.AnimatorListener() {\r\n            @Override\r\n            public void onAnimationStart(Animator animation) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationRepeat(Animator animation) {\r\n                // TODO Auto-generated method stub\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationEnd(Animator animation) {\r\n                progress.setVisibility(View.VISIBLE);\r\n                progressAnimator(progress);\r\n                mInputLayout.setVisibility(View.INVISIBLE);\r\n                Intent intent1 = new Intent(Login.this, MyDataService.class);\r\n                startService(intent1);\r\n                Intent intent = new Intent(Login.this, MainActivity.class);\r\n                startActivity(intent);\r\n                Login.this.finish();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationCancel(Animator animation) {\r\n                // TODO Auto-generated method stub\r\n            }\r\n        });\r\n    }\r\n\r\n    private void progressAnimator(final View view) {\r\n        PropertyValuesHolder animator = PropertyValuesHolder.ofFloat(\"scaleX\", 0.5f, 1f);\r\n        PropertyValuesHolder animator2 = PropertyValuesHolder.ofFloat(\"scaleY\", 0.5f, 1f);\r\n        ObjectAnimator animator3 = ObjectAnimator.ofPropertyValuesHolder(view, animator, animator2);\r\n        animator3.setDuration(1500);\r\n        animator3.setInterpolator(new JellyInterpolator());\r\n        animator3.start();\r\n    }\r\n\r\n    public void back(View view) {\r\n        if(back==0){\r\n            Intent intent = new Intent(Login.this, MainActivity.class);\r\n            startActivity(intent);\r\n            this.finish();\r\n        }else {\r\n            this.finish();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/my/Login.java	(revision 21b7877dd1f66b71d3d154a1f20242410df2a3ee)
+++ app/src/main/java/com/example/pet/my/Login.java	(date 1607559730869)
@@ -152,7 +152,7 @@
             }
         });
         ObjectAnimator animator2 = ObjectAnimator.ofFloat(mInputLayout, "scaleX", 1f, 0.5f);
-        set.setDuration(4000);
+        set.setDuration(1500);
         set.setInterpolator(new AccelerateDecelerateInterpolator());
         set.playTogether(animator, animator2);
         set.start();
Index: app/src/main/java/com/example/pet/my/editinfo/EditInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.my.editinfo;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport android.app.Activity;\r\nimport android.content.ContentResolver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Rect;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.os.IBinder;\r\nimport android.os.Looper;\r\nimport android.os.Message;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupWindow;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bigkoo.pickerview.builder.OptionsPickerBuilder;\r\nimport com.bigkoo.pickerview.builder.TimePickerBuilder;\r\nimport com.bigkoo.pickerview.listener.CustomListener;\r\nimport com.bigkoo.pickerview.listener.OnOptionsSelectListener;\r\nimport com.bigkoo.pickerview.listener.OnTimeSelectListener;\r\nimport com.bigkoo.pickerview.view.OptionsPickerView;\r\nimport com.bigkoo.pickerview.view.TimePickerView;\r\nimport com.example.pet.R;\r\nimport com.example.pet.my.SetPassword;\r\nimport com.example.pet.other.Cache;\r\nimport com.example.pet.other.entity.User;\r\nimport com.google.gson.Gson;\r\nimport com.luck.picture.lib.PictureSelector;\r\nimport com.luck.picture.lib.config.PictureConfig;\r\nimport com.luck.picture.lib.config.PictureMimeType;\r\nimport com.luck.picture.lib.entity.LocalMedia;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport cn.jiguang.net.HttpUtils;\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\nimport static com.luck.picture.lib.config.PictureConfig.REQUEST_CAMERA;\r\n\r\npublic class EditInfo extends AppCompatActivity {\r\n    private User user = new User();\r\n    private TextView upSex;\r\n    private PopupWindow popupWindow;\r\n    private Toolbar toolbar;\r\n    private CircleImageView upPhoto;\r\n    private TextView upBrithday;\r\n    private EditText upName;\r\n    private TimePickerView pvTime;\r\n    private OptionsPickerView pvCustomOptions;\r\n    private ArrayList<String> cardItem = new ArrayList<>();\r\n    //输入框初始值\r\n    private int num = 0;\r\n    //输入框最大值\r\n    public int mMaxNum=200;\r\n    public EditText etInput;\r\n    private TextView tvInput;\r\n    private String image_path;\r\n    private static final int REQUEST_EXTERNAL_STORAGE = 1;\r\n    private static String[] PERMISSIONS_STORAGE = {\r\n            \"android.permission.READ_EXTERNAL_STORAGE\",\r\n            \"android.permission.WRITE_EXTERNAL_STORAGE\",\r\n            \"android.permission.CAMER\"};\r\n\r\n    Handler hd = new Handler() {\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n            if(msg.what == 1){\r\n                Toast.makeText(EditInfo.this,\"上传成功\",Toast.LENGTH_SHORT);\r\n                upData();\r\n            }else if(msg.what == 2){\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(EditInfo.this,\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 3){\r\n                Toast.makeText(EditInfo.this,\"上传成功\",Toast.LENGTH_SHORT);\r\n                EditInfo.this.finish();\r\n            }else {\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(EditInfo.this,\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }\r\n        }\r\n    };\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_edit_info);\r\n//        if (Build.VERSION.SDK_INT >= 21) {   //只有5.0及以上系统才支持，因此这里先进行了一层if判断\r\n//            View decorView = getWindow().getDecorView();\r\n//            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n//                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE    //设置为全屏显示，必须这两行代码一起才能生效\r\n//                    |View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;  //因为背景为浅色，设置通知栏字体颜色为深色\r\n//            decorView.setSystemUiVisibility(option);\r\n//            getWindow().setStatusBarColor(Color.TRANSPARENT);//设置为透明\r\n//        }\r\n        //设置控件内容\r\n        setView();\r\n        initData();\r\n        //加载数据\r\n        upSex();\r\n        upBri();\r\n        countWords();\r\n    }\r\n\r\n    private void initData() {\r\n        cardItem.add(\"未知\");\r\n        cardItem.add(\"男\");\r\n        cardItem.add(\"女\");\r\n        Log.e(\"initData\",\"start\");\r\n        if(Cache.user.getPicturePath() != null){\r\n            upPhoto.setImageBitmap(Cache.user.getPhoto());\r\n        }\r\n        if(Cache.user.getUserName() != null){\r\n            upName.setText(Cache.user.getUserName());\r\n        }\r\n        if(Cache.user.getUserSex() != null){\r\n            upSex.setText(Cache.user.getUserSex());\r\n        }\r\n        if(Cache.user.getUserBrithday() != null){\r\n            upBrithday.setText(Cache.user.getUserBrithday());\r\n        }\r\n        if(Cache.user.getUserAutograph() != null){\r\n            etInput.setText(Cache.user.getUserAutograph());\r\n        }\r\n        Log.e(\"initData\",\"over\");\r\n    }\r\n\r\n    private void setView() {\r\n        upSex = findViewById(R.id.edit_info_sex);\r\n        toolbar = findViewById(R.id.edit_toolbar);\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                EditInfo.this.finish();\r\n            }\r\n        });\r\n        upBrithday = findViewById(R.id.upBrithday);\r\n        upName = findViewById(R.id.upName);\r\n        upPhoto = findViewById(R.id.upPhoto);\r\n        etInput = findViewById(R.id.et_input);\r\n        tvInput = findViewById(R.id.tv_input);\r\n\r\n\r\n\r\n    }\r\n\r\n    public void onClicked(View view) {\r\n        switch(view.getId()){\r\n            case R.id.upPhoto:\r\n                //上传头像\r\n                upPic();\r\n                break;\r\n            case R.id.upName:\r\n                break;\r\n            case R.id.ll_upSex:\r\n                pvCustomOptions.show();\r\n                break;\r\n            case R.id.ll_upBrithday:\r\n                pvTime.show();\r\n                break;\r\n            case R.id.tv_save:\r\n                //保存信息\r\n                if(image_path == null){\r\n                    upData();\r\n                }else {\r\n                    upPhoto(image_path);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void upSex() {\r\n        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\r\n        // 具体可参考demo 里面的两个自定义布局\r\n        pvCustomOptions = new OptionsPickerBuilder(this, new OnOptionsSelectListener() {\r\n            @Override\r\n            public void onOptionsSelect(int options1, int options2, int options3, View v) {\r\n               //返回的分别是三个级别的选中位置\r\n                String tx = cardItem.get(options1);\r\n                upSex.setText(tx);\r\n                Cache.user.setUserSex(tx);\r\n                user.setUserSex(tx);\r\n            }\r\n        })\r\n                .setLayoutRes(R.layout.picker_sex_bg, new CustomListener() {\r\n                    @Override\r\n                    public void customLayout(View v) {\r\n                        //自定义布局中的控件初始化及事件处理\r\n                        final TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n                        TextView tvCancel = v.findViewById(R.id.tv_cancel);\r\n                        TextView tyTitle = v.findViewById(R.id.tv_title);\r\n                        tyTitle.setText(\"性别\");\r\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvCustomOptions.returnData();\r\n                                pvCustomOptions.dismiss();\r\n                            }\r\n                        });\r\n                        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvCustomOptions.dismiss();\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .setLineSpacingMultiplier(1.5f)//滚轮字体间距\r\n                .setContentTextSize(22)//字体大小\r\n                .setOutSideCancelable(true)\r\n                .build();\r\n        pvCustomOptions.setPicker(cardItem);//添加数据\r\n    }\r\n\r\n    private void upBri() {\r\n        Calendar selectedDate = Calendar.getInstance();//系统当前时间\r\n        Calendar startDate = Calendar.getInstance();\r\n        startDate.set(1900, 1, 1);\r\n        Calendar endDate = Calendar.getInstance();\r\n        pvTime = new TimePickerBuilder(this, new OnTimeSelectListener() {\r\n            @Override\r\n            public void onTimeSelect(Date date, View v) {\r\n                upBrithday.setText(getTimes(date));\r\n                Cache.user.setUserBrithday(getTimes(date));\r\n                user.setUserBrithday(getTimes(date));\r\n            }\r\n        })\r\n                .setDate(selectedDate)\r\n                .setRangDate(startDate,endDate)\r\n                .setLayoutRes(R.layout.picker_time_bg, new CustomListener() {\r\n                    @Override\r\n                    public void customLayout(View v) {\r\n                        TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n                        TextView tvCannel = v.findViewById(R.id.tv_cancel);\r\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvTime.returnData();\r\n                                pvTime.dismiss();\r\n                            }\r\n                        });\r\n                        tvCannel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvTime.dismiss();\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .setContentTextSize(22)//字体大小\r\n                .setOutSideCancelable(true)\r\n                .setType(new boolean[]{true, true, true, false, false, false})\r\n                .setLabel(\"年\", \"月\", \"日\", \"时\", \"分\", \"秒\")\r\n                .setLineSpacingMultiplier(1.5f)\r\n                .setTextXOffset(0, 0, 0, 40, 0, -40)\r\n                .isCenterLabel(false) //是否只显示中间选中项的label文字，false则每项item全部都带有label。\r\n                .setDividerColor(0xFF24AD9D)\r\n                .build();\r\n    }\r\n\r\n    //格式化时间\r\n    private String getTimes(Date date) {\r\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        return format.format(date);\r\n    }\r\n\r\n    /**\r\n     * 隐藏键盘\r\n     * @param ev\r\n     * @return\r\n     */\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent ev) {\r\n        if (ev.getAction() == MotionEvent.ACTION_DOWN) {\r\n            View v = getCurrentFocus();\r\n            if (isShouldHideKeyboard(v, ev)) {\r\n                hideKeyboard(v.getWindowToken());\r\n            }\r\n        }\r\n        return super.dispatchTouchEvent(ev);\r\n    }\r\n\r\n    /**\r\n     * 根据EditText所在坐标和用户点击的坐标相对比，来判断是否隐藏键盘，因为当用户点击EditText时则不能隐藏\r\n     *\r\n     * @param v\r\n     * @param event\r\n     * @return\r\n     */\r\n    private boolean isShouldHideKeyboard(View v, MotionEvent event) {\r\n        if (v != null && (v instanceof EditText)) {\r\n            int[] l = {0, 0};\r\n            v.getLocationInWindow(l);\r\n            int left = l[0],\r\n                    top = l[1],\r\n                    bottom = top + v.getHeight(),\r\n                    right = left + v.getWidth();\r\n            if (event.getX() > left && event.getX() < right\r\n                    && event.getY() > top && event.getY() < bottom) {\r\n                // 点击EditText的事件，忽略它。\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        // 如果焦点不是EditText则忽略，这个发生在视图刚绘制完，第一个焦点不在EditText上，和用户用轨迹球选择其他的焦点\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取InputMethodManager，隐藏软键盘\r\n     * @param token\r\n     */\r\n    private void hideKeyboard(IBinder token) {\r\n        if (token != null) {\r\n            InputMethodManager im = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            im.hideSoftInputFromWindow(token, InputMethodManager.HIDE_NOT_ALWAYS);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 记录字数和限制最大输入字数\r\n     */\r\n    private void countWords() {\r\n        etInput.addTextChangedListener(new TextWatcher() {\r\n            //记录输入的字数\r\n            private CharSequence wordNum;\r\n            private int selectionStart;\r\n            private int selectionEnd;\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                //实时记录输入的字数\r\n                wordNum= s;\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                Cache.user.setUserAutograph(Cache.user.getUserAutograph() + s);\r\n                int number = num + s.length();\r\n                //TextView显示剩余字数\r\n                tvInput.setText(\"\" + number+\"/\" + mMaxNum);\r\n                selectionStart=etInput.getSelectionStart();\r\n                selectionEnd = etInput.getSelectionEnd();\r\n                //判断大于最大值\r\n                if (wordNum.length() > mMaxNum) {\r\n                    //删除多余输入的字（不会显示出来）\r\n                    s.delete(selectionStart - 1, selectionEnd);\r\n                    int tempSelection = selectionEnd;\r\n                    etInput.setText(s);\r\n                    etInput.setSelection(tempSelection);//设置光标在最后\r\n                    //吐司最多输入300字\r\n                    Toast.makeText(EditInfo.this, \"最多输入\"+mMaxNum+\"字\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void upPic() {\r\n        //动态申请权限\r\n        verifyStoragePermissions(this);\r\n        PictureSelector.create(this)\r\n                .openGallery(PictureConfig.TYPE_IMAGE)\r\n                .imageEngine(GlideEngine.createGlideEngine())\r\n                .imageSpanCount(4)// 每行显示个数 int\r\n                .maxSelectNum(1)\r\n                .isWeChatStyle(true)\r\n                .selectionMode(PictureConfig.SINGLE)// 多选 or 单选 PictureConfig.MULTIPLE or PictureConfig.SINGLE\r\n                .isSingleDirectReturn(true)//PictureConfig.SINGLE模式下是否直接返回\r\n                .isPreviewImage(true)// 是否可预览图片 true or false\r\n                .isCamera(true)// 是否显示拍照按钮 true or false\r\n                .imageFormat(PictureMimeType.JPEG)// 拍照保存图片格式后缀,默认jpeg\r\n                .isZoomAnim(true)// 图片列表点击 缩放效果 默认true\r\n                .setOutputCameraPath(Const.getImgPath())// 自定义拍照保存路径,可不填\r\n                .isEnableCrop(true)// 是否裁剪 true or false\r\n                .isCompress(true)// 是否压缩 true or false\r\n                .compressSavePath(Const.getImgPath())//压缩图片保存地址\r\n                .freeStyleCropEnabled(true)// 裁剪框是否可拖拽 true or false\r\n                .showCropGrid(true)// 是否显示裁剪矩形网格 圆形裁剪时建议设为false    true or false\r\n                .forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code\r\n    }\r\n\r\n    //接受回调\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == -1 && data != null) {\r\n            switch (requestCode) {\r\n                case PictureConfig.CHOOSE_REQUEST:\r\n                    List<LocalMedia> selectList = PictureSelector.obtainMultipleResult(data);\r\n                    image_path = selectList.get(0).getCompressPath();\r\n                    upPhoto.setImageURI(Uri.parse(image_path));\r\n                    //上传图片\r\n                    Cache.user.setPicturePath(image_path);\r\n                    user.setPicturePath(image_path);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 上传图片\r\n     * 未测试\r\n     */\r\n    public void upPhoto(String path){\r\n        Cache.user.setUserName(upName.getText().toString());\r\n        Log.e(\"name\",upName.getText().toString());\r\n        Log.e(\"up\",\"1\");\r\n        File file = new File(path);\r\n        Log.e(\"up\",\"2\");\r\n        String url = Cache.MY_URL + \"UpdataUserInfoServlet\";\r\n        OkHttpClient okHttpClient = new OkHttpClient();\r\n        if(file != null && file.exists()){\r\n            RequestBody requestBody = new MultipartBody.Builder()\r\n                    .setType(MultipartBody.FORM)\r\n                    .addFormDataPart(\"file\",\r\n                            Cache.userPhone + \".jpg\",\r\n                            RequestBody.create(MediaType.parse(\"image/png\"),file))\r\n                    .addFormDataPart(\"phone\",Cache.userPhone)\r\n                    .build();\r\n            Request request = new Request.Builder()\r\n                    .url(url)\r\n                    .post(requestBody)\r\n                    .build();\r\n            Call call = okHttpClient.newCall(request);\r\n\r\n            Log.e(\"up\",\"3\");\r\n            call.enqueue(new Callback() {\r\n                @Override\r\n                public void onFailure(Call call, IOException e) {\r\n                    //失败\r\n                    Log.e(\"up\",\"4b\");\r\n                    Message msg = new Message();\r\n                    msg.what = 2;\r\n                    msg.obj = 1;\r\n                    Log.e(\"up\",\"5b\");\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"up\",\"6b\");\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                @Override\r\n                public void onResponse(Call call, Response response) throws IOException {\r\n                    //上传成功\r\n                    Log.e(\"up\",\"4a\");\r\n                    Message msg = new Message();\r\n                    String res = response.body().string();\r\n                    if(res.equals(\"true\")){\r\n                        msg.what = 1;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\",res);\r\n                    }else {\r\n                        msg.what = 2;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\",res);\r\n                    }\r\n                    hd.sendMessage(msg);\r\n\r\n                }\r\n            });\r\n\r\n        }else {\r\n            Toast.makeText(EditInfo.this,\"请添加头像\",Toast.LENGTH_SHORT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 上传数据\r\n     */\r\n    public void upData(){\r\n        OkHttpClient okHttpClient = new OkHttpClient();\r\n        //创建请求体对象\r\n        user.setUserPhone(Cache.userPhone);\r\n        String name = upName.getText().toString();\r\n        if(name == null){\r\n            user.setUserName(\"\");\r\n        }else {\r\n            user.setUserName(name);\r\n        }\r\n        String autograph = etInput.getText().toString();\r\n        if(autograph == null){\r\n            user.setUserAutograph(\"\");\r\n        }else {\r\n            user.setUserAutograph(autograph);\r\n        }\r\n        String path = Cache.user.getPicturePath();\r\n        if(path == null){\r\n            user.setPicturePath(\"\");\r\n        }else {\r\n            user.setPicturePath(path);\r\n        }\r\n        String sex = upSex.getText().toString();\r\n        if(sex == null){\r\n            user.setUserSex(\"未知\");\r\n        }else {\r\n            user.setUserSex(sex);\r\n        }\r\n        String brithday = upBrithday.getText().toString();\r\n        if(brithday == null){\r\n            Calendar selectedDate = Calendar.getInstance();//系统当前时间\r\n            user.setUserBrithday(getTimes(selectedDate.getTime()));\r\n        }else {\r\n            user.setUserBrithday(brithday);\r\n        }\r\n\r\n        RequestBody requestBody = RequestBody.create(MediaType.parse(\r\n                \"text/plain;charset=UTF-8\"),new Gson().toJson(user));\r\n        //3.创建请求对象\r\n        Request request = new Request.Builder()\r\n                .post(requestBody)\r\n                .url(Cache.MY_URL + \"UpDataUserInfo2Servlet\")\r\n                .build();\r\n        //3.创建Call对象，发送请求，并接受响应\r\n        Call call = okHttpClient.newCall(request);\r\n        //异步网络请求（无需手动使用子线程）\r\n        call.enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(Call call, IOException e) {\r\n                //失败\r\n                Message msg = new Message();\r\n                msg.what = 4;\r\n                msg.obj = 3;\r\n                Log.e(\"up\",\"5b\");\r\n                hd.sendMessage(msg);\r\n                Log.e(\"up\",\"6b\");\r\n                e.printStackTrace();\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(Call call, Response response) throws IOException {\r\n                //上传成功\r\n                Message msg = new Message();\r\n                String res = response.body().string();\r\n                if(res.equals(\"true\")){\r\n                    msg.what = 3;\r\n                    msg.obj = 1;\r\n                    Log.e(\"updata\",res);\r\n                }else {\r\n                    msg.what = 2;\r\n                    msg.obj = 1;\r\n                    Log.e(\"updata\",res);\r\n                }\r\n                hd.sendMessage(msg);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    //然后通过一个函数来申请权限\r\n    public static void verifyStoragePermissions(Activity activity) {\r\n        try {\r\n            //检测是否有写的权限\r\n            int permission = ActivityCompat.checkSelfPermission(activity,\r\n                    \"android.permission.WRITE_EXTERNAL_STORAGE\");\r\n            if (permission != PackageManager.PERMISSION_GRANTED) {\r\n                // 没有写的权限，去申请写的权限，会弹出对话框\r\n                ActivityCompat.requestPermissions(activity, PERMISSIONS_STORAGE,REQUEST_EXTERNAL_STORAGE);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/my/editinfo/EditInfo.java	(revision 21b7877dd1f66b71d3d154a1f20242410df2a3ee)
+++ app/src/main/java/com/example/pet/my/editinfo/EditInfo.java	(date 1607559117694)
@@ -425,6 +425,7 @@
                 .compressSavePath(Const.getImgPath())//压缩图片保存地址
                 .freeStyleCropEnabled(true)// 裁剪框是否可拖拽 true or false
                 .showCropGrid(true)// 是否显示裁剪矩形网格 圆形裁剪时建议设为false    true or false
+                .synOrAsy(false)
                 .forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code
     }
 
