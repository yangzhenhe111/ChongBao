Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sat Dec 05 11:37:57 CST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\ndistributionUrl=file:///D:/work/gradle-6.5-bin/6nifqtx7604sqp1q6g8wikw7p/gradle-6.5-bin.zip\r\nzipStorePath=wrapper/dists\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 4b253961d8dfb5a252e0f42ae08e5d0dbc4b1f9e)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1607843802805)
@@ -2,5 +2,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
-distributionUrl=file:///D:/work/gradle-6.5-bin/6nifqtx7604sqp1q6g8wikw7p/gradle-6.5-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
 zipStorePath=wrapper/dists
Index: app/src/main/java/com/example/pet/my/PageFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.my;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.bigkoo.pickerview.builder.OptionsPickerBuilder;\r\nimport com.bigkoo.pickerview.listener.CustomListener;\r\nimport com.bigkoo.pickerview.listener.OnOptionsSelectListener;\r\nimport com.bigkoo.pickerview.view.OptionsPickerView;\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.pet.R;\r\nimport com.example.pet.my.editinfo.Const;\r\nimport com.example.pet.my.editinfo.EditInfo;\r\nimport com.example.pet.my.editinfo.GlideEngine;\r\nimport com.example.pet.other.Cache;\r\nimport com.example.pet.other.entity.Pet;\r\nimport com.google.gson.Gson;\r\nimport com.luck.picture.lib.PictureSelector;\r\nimport com.luck.picture.lib.config.PictureConfig;\r\nimport com.luck.picture.lib.config.PictureMimeType;\r\nimport com.luck.picture.lib.entity.LocalMedia;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class PageFragment extends Fragment {\r\n\r\n    private ImageView petPhoto;\r\n    private EditText petName;\r\n    private TextView petType;\r\n    private TextView petAge;\r\n    private EditText petAutograph;\r\n    private Button btnUpdate;\r\n    private TextView tvNum;\r\n    private int index;\r\n    private Pet pet;\r\n    private int agex;\r\n    private Bitmap bitmap;\r\n\r\n\r\n    private OptionsPickerView pvAgeOptions;\r\n    private OptionsPickerView pvTypeOptions;\r\n    private ArrayList<Integer> ageItem = new ArrayList<>();\r\n    private ArrayList<String> typeItem = new ArrayList<>();\r\n    //输入框初始值\r\n    private int num = 0;\r\n    //输入框最大值\r\n    public int mMaxNum=200;\r\n    private String image_path;\r\n    private static final int REQUEST_EXTERNAL_STORAGE = 1;\r\n    private static String[] PERMISSIONS_STORAGE = {\r\n            \"android.permission.READ_EXTERNAL_STORAGE\",\r\n            \"android.permission.WRITE_EXTERNAL_STORAGE\",\r\n            \"android.permission.CAMER\"};\r\n\r\n    Handler hd = new Handler() {\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n            if(msg.what == 1){\r\n                Toast.makeText(getContext(),\"上传成功\",Toast.LENGTH_SHORT);\r\n                upData();\r\n            }else if(msg.what == 2){\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(getContext(),\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 3){\r\n                Toast.makeText(getContext(),\"上传成功\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 4) {\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(getContext(),\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 5){\r\n                Uri uri = Uri.parse(msg.obj.toString());\r\n                bitmap = BitmapFactory.decodeFile(image_path);\r\n                petPhoto.setImageBitmap(bitmap);\r\n                //                petPhoto.setImageURI(uri);\r\n            }else if(msg.what == 6) {\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(getContext(),\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 上传图片\r\n     * 未测试\r\n     */\r\n    public void upPhoto(String path) {\r\n        Cache.myPetList.get(index).setPicturePath(image_path);\r\n        Cache.myPetList.get(index).setPicture(bitmap);\r\n        Log.e(\"up\", \"1\");\r\n        File file = new File(path);\r\n        Log.e(\"up\", \"2\");\r\n        String url = Cache.MY_URL + \"UpDataPetInfoServlet\";\r\n        OkHttpClient okHttpClient = new OkHttpClient();\r\n        if (file != null && file.exists()) {\r\n            RequestBody requestBody = new MultipartBody.Builder()\r\n                    .setType(MultipartBody.FORM)\r\n                    .addFormDataPart(\"file\",\r\n                            Cache.userPhone +\"\" + index + \".jpg\",\r\n                            RequestBody.create(MediaType.parse(\"image/png\"), file))\r\n                    .build();\r\n            Request request = new Request.Builder()\r\n                    .url(url)\r\n                    .post(requestBody)\r\n                    .build();\r\n            Call call = okHttpClient.newCall(request);\r\n\r\n            Log.e(\"up\", \"3\");\r\n            call.enqueue(new Callback() {\r\n                @Override\r\n                public void onFailure(Call call, IOException e) {\r\n                    //失败\r\n                    Log.e(\"up\", \"4b\");\r\n                    Message msg = new Message();\r\n                    msg.what = 2;\r\n                    msg.obj = 1;\r\n                    Log.e(\"up\", \"5b\");\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"up\", \"6b\");\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                @Override\r\n                public void onResponse(Call call, Response response) throws IOException {\r\n                    //上传成功\r\n                    Log.e(\"up\", \"4a\");\r\n                    Message msg = new Message();\r\n                    String res = response.body().string();\r\n                    if (res.equals(\"true\")) {\r\n                        msg.what = 1;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\", res);\r\n                    } else {\r\n                        msg.what = 2;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\", res);\r\n                    }\r\n                    hd.sendMessage(msg);\r\n\r\n                }\r\n            });\r\n\r\n        } else {\r\n            Toast.makeText(getActivity(), \"请添加头像\", Toast.LENGTH_SHORT);\r\n        }\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.activity_pet, container, false);\r\n        Bundle bundle = getArguments();\r\n        index = bundle.getInt(\"index\");\r\n        //设置\r\n        pet = new Pet();\r\n        initAge();\r\n        initType();\r\n        MyListener myListener = new MyListener();\r\n        LinearLayout llAge = view.findViewById(R.id.ll_pet_age);\r\n        llAge.setOnClickListener(myListener);\r\n        LinearLayout llType = view.findViewById(R.id.ll_pet_type);\r\n        llType.setOnClickListener(myListener);\r\n        Log.e(\"upAge\",\"绑定成功\");\r\n        petPhoto = view.findViewById(R.id.pet_photo);\r\n        petPhoto.setOnClickListener(myListener);\r\n        petName = view.findViewById(R.id.pet_name);\r\n        petType = view.findViewById(R.id.pet_type);\r\n        petAge = view.findViewById(R.id.pet_age);\r\n        petAutograph = view.findViewById(R.id.pet_autograph);\r\n        btnUpdate = view.findViewById(R.id.pet_update);\r\n        tvNum = view.findViewById(R.id.tv_input);\r\n        btnUpdate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                upData();\r\n                String type = petType.getText().toString();\r\n//        String age = petAge.getText().toString();\r\n                String autograph = petAutograph.getText().toString();\r\n                String name = petName.getText().toString();\r\n                Log.e(\"type:\",type);\r\n                Log.e(\"age\",agex+\"岁\");\r\n                Log.e(\"autogragh:\",autograph);\r\n                Log.e(\"name:\",name);\r\n                if(image_path != null){\r\n                    upPhoto(image_path);\r\n                }else {\r\n                    upData();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n//        Intent intent = new Intent(getContext(),MyDataService.class);\r\n//        getContext().startService(intent);\r\n        setViewContent();\r\n        countWords();\r\n        return view;\r\n    }\r\n\r\n    private void upData() {\r\n        String type = petType.getText().toString();\r\n//        String age = petAge.getText().toString();\r\n        String autograph = petAutograph.getText().toString();\r\n        String name = petName.getText().toString();\r\n        Log.e(\"type:\",type);\r\n        Log.e(\"age\",agex+\"岁\");\r\n        Log.e(\"autogragh:\",autograph);\r\n        Log.e(\"name:\",name);\r\n        Cache.myPetList.get(index).setPetAge(agex);\r\n        Cache.myPetList.get(index).setPetName(name);\r\n        Cache.myPetList.get(index).setPetAutograph(autograph);\r\n        Cache.myPetList.get(index).setPetType(type);\r\n        if(image_path != null &&  type != null && agex != 0 && autograph != null && name != null){\r\n            //发送\r\n            pet.setPetId(Cache.myPetList.get(index).getPetId());\r\n            pet.setPicturePath(Cache.userPhone +\"\"+ Cache.myPetList.get(index).getPetId()+ \".jpg\");\r\n            pet.setPetType(type);\r\n            pet.setPetAutograph(autograph);\r\n            pet.setPetName(name);\r\n            pet.setPetAge(agex);\r\n            Log.e(\"pet\",pet.toString());\r\n            OkHttpClient okHttpClient = new OkHttpClient();\r\n\r\n            RequestBody requestBody = RequestBody.create(MediaType.parse(\r\n                    \"text/plain;charset=UTF-8\"),new Gson().toJson(pet));\r\n            //3.创建请求对象\r\n            Request request = new Request.Builder()\r\n                    .post(requestBody)\r\n                    .url(Cache.MY_URL + \"UpDataPetInfo2Servlet\")\r\n                    .build();\r\n            //3.创建Call对象，发送请求，并接受响应\r\n            Call call = okHttpClient.newCall(request);\r\n            //异步网络请求（无需手动使用子线程）\r\n            call.enqueue(new Callback() {\r\n                @Override\r\n                public void onFailure(Call call, IOException e) {\r\n                    //失败\r\n                    Message msg = new Message();\r\n                    msg.what = 4;\r\n                    msg.obj = 3;\r\n                    Log.e(\"up\",\"5b\");\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"up\",\"6b\");\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                @Override\r\n                public void onResponse(Call call, Response response) throws IOException {\r\n                    //上传成功\r\n                    Message msg = new Message();\r\n                    String res = response.body().string();\r\n                    if(res.equals(\"true\")){\r\n                        msg.what = 3;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\",res);\r\n                    }else {\r\n                        msg.what = 2;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\",res);\r\n                    }\r\n                    hd.sendMessage(msg);\r\n\r\n                }\r\n            });\r\n        }else {\r\n            Toast.makeText(getActivity(),\"有信息未填，请填写！\",Toast.LENGTH_SHORT);\r\n        }\r\n    }\r\n\r\n    public void setViewContent() {\r\n        petAutograph.setText(Cache.myPetList.get(index).getPetAutograph(), TextView.BufferType.EDITABLE);\r\n        petPhoto.setImageBitmap(Cache.myPetList.get(index).getPicture());\r\n        petName.setText(Cache.myPetList.get(index).getPetName(), TextView.BufferType.EDITABLE);\r\n        petType.setText(Cache.myPetList.get(index).getPetType(), TextView.BufferType.EDITABLE);\r\n        agex = Cache.myPetList.get(0).getPetAge();\r\n        petAge.setText(agex + \"岁\", TextView.BufferType.EDITABLE);\r\n\r\n    }\r\n\r\n    public class MyListener implements View.OnClickListener {\r\n\r\n        @Override\r\n        public void onClick(View v) {\r\n            switch (v.getId()){\r\n                case R.id.ll_pet_type:\r\n                    pvTypeOptions.show();\r\n                    break;\r\n                case R.id.ll_pet_age:\r\n                    pvAgeOptions.show();\r\n                    Log.e(\"upAge\",\"over\");\r\n                    break;\r\n                case R.id.pet_photo:\r\n                    upPic();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void upType() {\r\n        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\r\n        // 具体可参考demo 里面的两个自定义布局\r\n        Log.e(\"upAge\",\"start\");\r\n        pvTypeOptions = new OptionsPickerBuilder(getActivity(), new OnOptionsSelectListener() {\r\n            @Override\r\n            public void onOptionsSelect(int options1, int options2, int options3, View v) {\r\n                //返回的分别是三个级别的选中位置\r\n                String tx = typeItem.get(options1);\r\n                petType.setText(tx);\r\n            }\r\n        })\r\n                .setLayoutRes(R.layout.picker_sex_bg, new CustomListener() {\r\n                    @Override\r\n                    public void customLayout(View v) {\r\n                        //自定义布局中的控件初始化及事件处理\r\n                        final TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n                        TextView tvCancel = v.findViewById(R.id.tv_cancel);\r\n                        TextView tyTitle = v.findViewById(R.id.tv_title);\r\n                        tyTitle.setText(\"宠物年龄\");\r\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvTypeOptions.returnData();\r\n                                pvTypeOptions.dismiss();\r\n                            }\r\n                        });\r\n                        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvTypeOptions.dismiss();\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .setLineSpacingMultiplier(1.5f)//滚轮字体间距\r\n                .setContentTextSize(22)//字体大小\r\n                .setOutSideCancelable(true)\r\n                .build();\r\n        pvTypeOptions.setPicker(typeItem);//添加数据\r\n    }\r\n\r\n    private void upAge() {\r\n        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\r\n        // 具体可参考demo 里面的两个自定义布局\r\n        Log.e(\"upAge\",\"start\");\r\n        pvAgeOptions = new OptionsPickerBuilder(getActivity(), new OnOptionsSelectListener() {\r\n            @Override\r\n            public void onOptionsSelect(int options1, int options2, int options3, View v) {\r\n                //返回的分别是三个级别的选中位置\r\n                int tx = ageItem.get(options1);\r\n                petAge.setText(tx + \"岁\");\r\n                agex = tx;\r\n            }\r\n        })\r\n                .setLayoutRes(R.layout.picker_sex_bg, new CustomListener() {\r\n                    @Override\r\n                    public void customLayout(View v) {\r\n                        //自定义布局中的控件初始化及事件处理\r\n                        final TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n                        TextView tvCancel = v.findViewById(R.id.tv_cancel);\r\n                        TextView tyTitle = v.findViewById(R.id.tv_title);\r\n                        tyTitle.setText(\"宠物年龄\");\r\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvAgeOptions.returnData();\r\n                                pvAgeOptions.dismiss();\r\n                            }\r\n                        });\r\n                        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvAgeOptions.dismiss();\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .setLineSpacingMultiplier(1.5f)//滚轮字体间距\r\n                .setContentTextSize(22)//字体大小\r\n                .setOutSideCancelable(true)\r\n                .build();\r\n        pvAgeOptions.setPicker(ageItem);//添加数据\r\n    }\r\n\r\n    public void initAge(){\r\n        for(int i = 1;i < 30;i++){\r\n            ageItem.add(i);\r\n        }\r\n    }\r\n    public void initType(){\r\n        typeItem.add(\"哈士奇\");\r\n        typeItem.add(\"兔子\");\r\n        typeItem.add(\"加菲猫\");\r\n        typeItem.add(\"小白鼠\");\r\n        typeItem.add(\"无皮猫\");\r\n        typeItem.add(\"土狗\");\r\n        typeItem.add(\"仓鼠\");\r\n    }\r\n    /**\r\n     * 记录字数和限制最大输入字数\r\n     */\r\n    private void countWords() {\r\n        petAutograph.addTextChangedListener(new TextWatcher() {\r\n            //记录输入的字数\r\n            private CharSequence wordNum;\r\n            private int selectionStart;\r\n            private int selectionEnd;\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n                wordNum = s;\r\n                //判断大于最大值\r\n                tvNum.setText(\"\" + count+\"/\" + mMaxNum);\r\n                if (wordNum.length() > mMaxNum) {\r\n                    int tempSelection = selectionEnd;\r\n                    petAutograph.setText(s);\r\n                    petAutograph.setSelection(tempSelection);//设置光标在最后\r\n                    //吐司最多输入300字\r\n                    Toast.makeText(getContext(), \"最多输入\"+mMaxNum+\"字\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                //实时记录输入的字数\r\n                wordNum= s;\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                int number = num + s.length();\r\n                //TextView显示剩余字数\r\n                tvNum.setText(\"\" + number+\"/\" + mMaxNum);\r\n                selectionStart=petAutograph.getSelectionStart();\r\n                selectionEnd = petAutograph.getSelectionEnd();\r\n                //判断大于最大值\r\n                if (wordNum.length() > mMaxNum) {\r\n                    //删除多余输入的字（不会显示出来）\r\n                    s.delete(selectionStart - 1, selectionEnd);\r\n                    int tempSelection = selectionEnd;\r\n                    petAutograph.setText(s);\r\n                    petAutograph.setSelection(tempSelection);//设置光标在最后\r\n                    //吐司最多输入300字\r\n                    Toast.makeText(getContext(), \"最多输入\"+mMaxNum+\"字\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加相片\r\n     */\r\n    private void upPic() {\r\n        //动态申请权限\r\n        verifyStoragePermissions(getActivity());\r\n        PictureSelector.create(PageFragment.this)\r\n                .openGallery(PictureConfig.TYPE_IMAGE)\r\n                .imageEngine(GlideEngine.createGlideEngine())\r\n                .imageSpanCount(4)// 每行显示个数 int\r\n                .maxSelectNum(1)\r\n                .isWeChatStyle(true)\r\n                .selectionMode(PictureConfig.SINGLE)// 多选 or 单选 PictureConfig.MULTIPLE or PictureConfig.SINGLE\r\n                .isSingleDirectReturn(true)//PictureConfig.SINGLE模式下是否直接返回\r\n                .isPreviewImage(true)// 是否可预览图片 true or false\r\n                .isCamera(true)// 是否显示拍照按钮 true or false\r\n                .imageFormat(PictureMimeType.JPEG)// 拍照保存图片格式后缀,默认jpeg\r\n                .isZoomAnim(true)// 图片列表点击 缩放效果 默认true\r\n                .setOutputCameraPath(Const.getImgPath())// 自定义拍照保存路径,可不填\r\n                .isEnableCrop(true)// 是否裁剪 true or false\r\n                .isCompress(true)// 是否压缩 true or false\r\n                .compressSavePath(Const.getImgPath())//压缩图片保存地址\r\n                .freeStyleCropEnabled(true)// 裁剪框是否可拖拽 true or false\r\n                .showCropGrid(true)// 是否显示裁剪矩形网格 圆形裁剪时建议设为false    true or false\r\n                .synOrAsy(false)\r\n                .forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code\r\n    }\r\n\r\n    //接受回调\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == -1 && data != null) {\r\n            switch (requestCode) {\r\n                case PictureConfig.CHOOSE_REQUEST:\r\n                    List<LocalMedia> selectList = PictureSelector.obtainMultipleResult(data);\r\n                    image_path = selectList.get(0).getCompressPath();\r\n                    Message msg = new Message();\r\n                    msg.what = 5;\r\n                    msg.obj = image_path;\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"image_path\",image_path);\r\n                    //上传图片\r\n                    Cache.myPetList.get(index).setPicturePath(image_path);\r\n//                    Cache.user.setPicturePath(image_path);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //然后通过一个函数来申请权限\r\n    public static void verifyStoragePermissions(Activity activity) {\r\n        try {\r\n            //检测是否有写的权限\r\n            int permission = ActivityCompat.checkSelfPermission(activity,\r\n                    \"android.permission.WRITE_EXTERNAL_STORAGE\");\r\n            if (permission != PackageManager.PERMISSION_GRANTED) {\r\n                // 没有写的权限，去申请写的权限，会弹出对话框\r\n                ActivityCompat.requestPermissions(activity, PERMISSIONS_STORAGE,REQUEST_EXTERNAL_STORAGE);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n//        Intent intent = new Intent(getContext(),MyDataService.class);\r\n//        getContext().startService(intent);\r\n//        setViewContent();\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        upAge();\r\n        upType();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/my/PageFragment.java	(revision 4b253961d8dfb5a252e0f42ae08e5d0dbc4b1f9e)
+++ app/src/main/java/com/example/pet/my/PageFragment.java	(date 1607846882483)
@@ -106,8 +106,11 @@
                 Toast.makeText(getContext(),"上传失败了",Toast.LENGTH_SHORT);
             }else if(msg.what == 5){
                 Uri uri = Uri.parse(msg.obj.toString());
+                Glide.with(getContext())
+                        .load(uri)
+                        .into(petPhoto);
                 bitmap = BitmapFactory.decodeFile(image_path);
-                petPhoto.setImageBitmap(bitmap);
+//                petPhoto.setImageBitmap(bitmap);
                 //                petPhoto.setImageURI(uri);
             }else if(msg.what == 6) {
                 Log.e("up","6b");
Index: app/src/main/res/layout/my_listview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:orientation=\"horizontal\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"57dp\">\r\n    <com.example.pet.my.RoundImageView\r\n        android:layout_gravity=\"center_vertical\"\r\n        android:layout_marginLeft=\"12dp\"\r\n        android:id=\"@+id/my_img\"\r\n        android:layout_width=\"37dp\"\r\n        android:layout_height=\"37dp\" />\r\n    <TextView\r\n        android:layout_gravity=\"center_vertical\"\r\n        android:textColor=\"@color/titleText\"\r\n        android:gravity=\"center_vertical\"\r\n        android:textSize=\"16sp\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:id=\"@+id/my_text\"\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"wrap_content\" />\r\n    <ImageView\r\n        android:layout_marginLeft=\"163dp\"\r\n        android:layout_gravity=\"center_vertical\"\r\n        android:id=\"@+id/my_arrow\"\r\n        android:layout_width=\"14dp\"\r\n        android:layout_height=\"14dp\" />\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/my_listview.xml	(revision 4b253961d8dfb5a252e0f42ae08e5d0dbc4b1f9e)
+++ app/src/main/res/layout/my_listview.xml	(date 1607846426022)
@@ -18,10 +18,15 @@
         android:id="@+id/my_text"
         android:layout_width="100dp"
         android:layout_height="wrap_content" />
-    <ImageView
-        android:layout_marginLeft="163dp"
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
         android:layout_gravity="center_vertical"
-        android:id="@+id/my_arrow"
-        android:layout_width="14dp"
-        android:layout_height="14dp" />
+        android:gravity="right">
+        <ImageView
+            android:layout_marginRight="15dp"
+            android:id="@+id/my_arrow"
+            android:layout_width="14dp"
+            android:layout_height="14dp" />
+    </LinearLayout>
 </LinearLayout>
\ No newline at end of file
