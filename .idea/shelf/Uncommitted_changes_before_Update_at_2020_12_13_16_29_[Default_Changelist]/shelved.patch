Index: app/src/main/java/com/example/pet/nursing/HisaddAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.nursing;\r\n\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\n\r\nimport com.example.pet.R;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class HisaddAdapter extends BaseAdapter {\r\n    private viewHolder vh;\r\n    private Context mContext;\r\n    private int itemLayoutId;\r\n    private List<HisAddress> adds = new ArrayList<>();\r\n    private Handler handler = new Handler() {\r\n        public void handleMessage(final Message msg) {\r\n            switch (msg.what) {\r\n                case 1:\r\n                    AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\r\n                    builder.setTitle(\"提示\");//标题\r\n                    builder.setMessage(\"确定删除历史地址吗？\");//显示的提示内容\r\n                    builder.setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            remove((String)msg.obj);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n                    builder.setNegativeButton(\"取消\", null);\r\n                    AlertDialog alertDialog = builder.create();\r\n                    alertDialog.show();\r\n                    break;\r\n                case 2:\r\n                    AlertDialog.Builder builder2 = new AlertDialog.Builder(mContext);\r\n                    builder2.setTitle(\"提示\");//标题\r\n                    builder2.setMessage(\"历史地址已被删除\");//显示的提示内容\r\n                    builder2.setPositiveButton(\"确定\", null);\r\n                    AlertDialog alertDialog2 = builder2.create();\r\n                    alertDialog2.show();\r\n                    break;\r\n                case 3:\r\n                    AlertDialog.Builder builder3 = new AlertDialog.Builder(mContext);\r\n                    builder3.setTitle(\"提示\");//标题\r\n                    builder3.setMessage(\"历史地址删除失败\");//显示的提示内容\r\n                    builder3.setPositiveButton(\"确定\", null);\r\n                    AlertDialog alertDialog3 = builder3.create();\r\n                    alertDialog3.show();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    private class viewHolder{\r\n        TextView add;\r\n        TextView name;\r\n        TextView tel;\r\n        ImageView cha;\r\n        ImageView de;\r\n    }\r\n\r\n    public HisaddAdapter(Context mContext, int itemLayoutId, List<HisAddress> adds) {\r\n        this.mContext = mContext;\r\n        this.itemLayoutId = itemLayoutId;\r\n        this.adds = adds;\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        if (null != adds) {\r\n            return adds.size();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public Object getItem(int position) {\r\n        if (null != adds) {\r\n            return adds.get(position);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return position;\r\n    }\r\n\r\n    @Override\r\n    public View getView(int position, View convertView, ViewGroup parent) {\r\n        if (null == convertView) {\r\n            convertView = LayoutInflater.from(mContext).inflate(itemLayoutId, null);\r\n            vh = new viewHolder();\r\n            vh.add = convertView.findViewById(R.id.add);\r\n            vh.name = convertView.findViewById(R.id.name);\r\n            vh.tel = convertView.findViewById(R.id.tel);\r\n            vh.cha = convertView.findViewById(R.id.chadd);\r\n            vh.de = convertView.findViewById(R.id.deadd);\r\n            convertView.setTag(vh);\r\n        }else{\r\n            vh = (viewHolder) convertView.getTag();\r\n        }\r\n        final HisAddress add = adds.get(position);\r\n        vh.add.setText(add.getAdd());\r\n        vh.name.setText(add.getName());\r\n        vh.tel.setText(add.getTel());\r\n        //设置监听器\r\n        vh.cha.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(mContext,ChangehisActivity.class);\r\n                intent.putExtra(\"add\",add.getAdd());\r\n                intent.putExtra(\"name\",add.getName());\r\n                intent.putExtra(\"tel\",add.getTel());\r\n                intent.putExtra(\"id\",add.getId());\r\n                mContext.startActivity(intent);\r\n            }\r\n        });\r\n        vh.de.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Message msg = new Message();\r\n                msg.what = 1;\r\n                msg.obj = add.getId();\r\n                handler.sendMessage(msg);\r\n            }\r\n        });\r\n        return convertView;\r\n    }\r\n\r\n    private void remove(final String s) {\r\n        new Thread() {\r\n            public void run() {\r\n                try {\r\n                    URL url = new URL(\"Removecar\" + s);\r\n                    url.openStream();\r\n                    URLConnection con = url.openConnection();\r\n                    InputStream in = con.getInputStream();\r\n                    BufferedReader reader = new BufferedReader(new InputStreamReader(in, \"utf-8\"));\r\n                    String str = reader.readLine();\r\n                    reader.close();\r\n                    in.close();\r\n                    if(str != null) {\r\n                        if (str.equals(\"移出成功\")) {\r\n                            Message msg = new Message();\r\n                            msg.what = 2;\r\n                            handler.sendMessage(msg);\r\n                        } else {\r\n                            Message msg = new Message();\r\n                            msg.what = 3;\r\n                            handler.sendMessage(msg);\r\n                        }\r\n                    }\r\n                } catch (MalformedURLException e) {\r\n                    e.printStackTrace();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }.start();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/nursing/HisaddAdapter.java	(revision 13dd9bb9be8ed31a954512809ab74316113ee12a)
+++ app/src/main/java/com/example/pet/nursing/HisaddAdapter.java	(date 1607847229738)
@@ -15,6 +15,7 @@
 import androidx.appcompat.app.AlertDialog;
 
 import com.example.pet.R;
+import com.example.pet.other.Cache;
 
 import java.io.BufferedReader;
 import java.io.IOException;
@@ -41,7 +42,7 @@
                     builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
-                            remove((String)msg.obj);
+                            remove((Integer) msg.obj);
                             dialog.dismiss();
                         }
                     });
@@ -68,7 +69,6 @@
             }
         }
     };
-
     private class viewHolder{
         TextView add;
         TextView name;
@@ -76,13 +76,11 @@
         ImageView cha;
         ImageView de;
     }
-
     public HisaddAdapter(Context mContext, int itemLayoutId, List<HisAddress> adds) {
         this.mContext = mContext;
         this.itemLayoutId = itemLayoutId;
         this.adds = adds;
     }
-
     @Override
     public int getCount() {
         if (null != adds) {
@@ -90,7 +88,6 @@
         }
         return 0;
     }
-
     @Override
     public Object getItem(int position) {
         if (null != adds) {
@@ -98,12 +95,10 @@
         }
         return null;
     }
-
     @Override
     public long getItemId(int position) {
         return position;
     }
-
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
         if (null == convertView) {
@@ -146,11 +141,11 @@
         return convertView;
     }
 
-    private void remove(final String s) {
+    private void remove(final int id) {
         new Thread() {
             public void run() {
                 try {
-                    URL url = new URL("Removecar" + s);
+                    URL url = new URL(Cache.MY_URL);
                     url.openStream();
                     URLConnection con = url.openConnection();
                     InputStream in = con.getInputStream();
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest\r\n    android:versionName=\"1.0.0\"\r\n    android:versionCode=\"3\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.pet\">\r\n    <permission android:protectionLevel=\"signature\"\r\n        android:name=\"com.example.pet.permission.JPUSH_MESSAGE\" />\r\n    <uses-permission android:name=\"android.permission.EXPAND_STATUS_BAR\"/>\r\n    <uses-permission android:name=\"android.permission.RECEIVE_USER_PRESENT\"/>\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\"/>\r\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\r\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\r\n    <uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\" tools:ignore=\"ProtectedPermissions\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_SETTINGS\"\r\n        tools:ignore=\"ProtectedPermissions\" />\r\n    <!-- Optional. Required for location feature -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\"/>\r\n    <uses-permission android:name=\"android.permission.GET_TASKS\"/>\r\n    <!-- Required -->\r\n    <!-- Optional. Required for location feature -->\r\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS\" />\r\n    <uses-permission android:name=\"com.example.liaotian.permission.JPUSH_MESSAGE\"/>\r\n    <!-- Required for jmrtc -->\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\r\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\"/>\r\n    <uses-permission android:name=\"com.android.launcher.permission.READ_SETTINGS\" />\r\n    <uses-permission android:name=\"${applicationId}.permission.JPUSH_MESSAGE\" />\r\n    <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:name=\".chat.BaseApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable/lastlogo\"\r\n        android:label=\"@string/app_name\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        android:roundIcon=\"@drawable/lastlogo\"\r\n        android:supportsRtl=\"true\"\r\n        android:sharedUserId=\"android.uid.system\"\r\n        android:largeHeap=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity android:name=\".my.NewPet\">\r\n\r\n        </activity>\r\n        <activity android:name=\".Start1Activity\"/>\r\n        <activity android:name=\".my.AcountSecurity\" />\r\n        <activity android:name=\".my.ConnectUs\" />\r\n        <activity android:name=\".my.order.MyOrderActivity\" />\r\n        <activity android:name=\".my.OrderComplete\" />\r\n        <activity\r\n            android:name=\".my.editinfo.EditInfo\"\r\n            android:windowSoftInputMode=\"adjustPan|adjustUnspecified|stateHidden\" />\r\n        <activity android:name=\".my.FunIntroduction\" />\r\n        <activity android:name=\".my.AboutUsLaw\" />\r\n        <activity android:name=\".my.Agreement\" />\r\n        <activity android:name=\".my.Order2\" />\r\n        <activity android:name=\".my.Register\" />\r\n        <activity android:name=\".my.Update\" />\r\n        <activity android:name=\".my.Check\" />\r\n        <activity android:name=\".my.Login\" />\r\n        <activity android:name=\".my.PetActivity\" />\r\n        <activity android:name=\".my.History\" />\r\n        <activity android:name=\".my.AboutUs\" />\r\n        <activity android:name=\".my.Setting\" />\r\n        <activity android:name=\".my.Post\" />\r\n        <activity android:name=\".forum.LandlordActivity\" />\r\n        <activity android:name=\".forum.TipsActivity\" />\r\n        <activity android:name=\".forum.TopicActivity\" />\r\n        <activity android:name=\".chat.Booking\" />\r\n        <activity android:name=\".chat.ChatMsgActivity\" />\r\n        <activity android:name=\".chat.AddFriendMsgActivity\" />\r\n        <activity android:name=\".chat.BaseActivity\" />\r\n        <activity android:name=\".chat.MsgVideoActivity\" />\r\n        <activity android:name=\".chat.UserActivty\" />\r\n        <activity android:name=\".chat.UserInfoActivity\" />\r\n        <activity android:name=\".chat.UserInfoOptionsActivity\" />\r\n        <activity android:name=\".forum.PublishActivity\" />\r\n        <activity android:name=\".nursing.CancelActivity\" />\r\n        <activity android:name=\".nursing.JiedanActivity\" />\r\n        <activity android:name=\".nursing.ChoiceActivity\" />\r\n        <activity android:name=\".nursing.XuzhiActivity\" />\r\n        <activity android:name=\".nursing.Choice2Activity\" />\r\n        <activity android:name=\".nursing.ChangehisActivity\" />\r\n        <activity android:name=\".nursing.EndActivity\" />\r\n        <activity android:name=\".nursing.StartActivity\" />\r\n        <activity android:name=\".nursing.NeworderActivity\" />\r\n        <activity android:name=\".nursing.CostActivity\" />\r\n        <activity android:name=\".forum.SearchResult\"/>\r\n        <activity android:name=\".forum.New_post_detail\"/>\r\n        <activity android:name=\".MainActivity\">\r\n        </activity>\r\n        <activity android:name=\".my.AcountManage\"/>\r\n        <activity android:name=\".forum.New_post_detail\"/>\r\n<activity android:name=\".my.AcountManage\"/>\r\n        <meta-data\r\n            android:name=\"com.baidu.lbsapi.API_KEY\"\r\n            android:value=\"Gy6t4iVa5bjCYSlblHYFLNKNCFmABmH3\" />\r\n        <service\r\n            android:name=\"com.baidu.location.f\"\r\n            android:enabled=\"true\"\r\n            android:process=\":remote\">\r\n            <intent-filter>\r\n                <action android:name=\"com.baidu.location.service_v5.0.0\" />\r\n            </intent-filter>\r\n        </service>\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:grantUriPermissions=\"true\"\r\n            android:exported=\"false\"\r\n            android:authorities=\"com.example.pet.fileProvider\">\r\n        <meta-data\r\n            android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n            android:resource=\"@xml/provider_paths\"/>\r\n        </provider>\r\n        <provider android:name=\"cn.jpush.im.android.helpers.ipc.IMProvider\"\r\n            android:exported=\"false\"\r\n            android:authorities=\"com.example.pet.jpushim.IMProvider\"/>\r\n        <activity\r\n            android:name=\".LoadingActivity\"\r\n            android:windowSoftInputMode=\"adjustPan\">\r\n            <intent-filter>\r\n            <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n            <category android:name=\"android.intent.category.LAUNCHER\" />\r\n        </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\"cn.jpush.android.ui.PushActivity\"\r\n            android:configChanges=\"orientation|keyboardHidden\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@android:style/Theme.NoTitleBar\">\r\n            <intent-filter>\r\n                <action android:name=\"cn.jpush.android.ui.PushActivity\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"${applicationId}\" />\r\n            </intent-filter>\r\n        </activity> <!-- Required SDK 核心功能 -->\r\n        <provider\r\n            android:name=\"cn.jpush.android.service.DataProvider\"\r\n            android:authorities=\"${applicationId}.DataProvider\"\r\n            android:exported=\"false\"\r\n            android:process=\":pushcore\" /> <!-- Required SDK核心功能 -->\r\n        <service android:name=\".my.MyUserService\" />\r\n\r\n        <receiver\r\n            android:name=\"cn.jpush.android.service.PushReceiver\"\r\n            android:enabled=\"true\">\r\n            <intent-filter android:priority=\"1000\">\r\n                <action android:name=\"cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY\" /> <!-- Required  显示通知栏 -->\r\n                <category android:name=\"${applicationId}\" />\r\n            </intent-filter>\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.USER_PRESENT\" />\r\n                <action android:name=\"android.net.conn.CONNECTIVITY_CHANGE\" />\r\n            </intent-filter>\r\n            <!-- Optional -->\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.PACKAGE_ADDED\" />\r\n                <action android:name=\"android.intent.action.PACKAGE_REMOVED\" />\r\n\r\n                <data android:scheme=\"package\" />\r\n            </intent-filter>\r\n        </receiver> <!-- Required SDK核心功能 -->\r\n        <receiver\r\n            android:name=\"cn.jpush.android.service.AlarmReceiver\"\r\n            android:exported=\"false\" />\r\n        <!-- User defined.  For test only  用户自定义接收消息器,3.0.7开始支持,目前新tag/alias接口设置结果会在该广播接收器对应的方法中回调 -->\r\n        <!-- since 3.3.0 接收JPush相关事件 -->\r\n        <receiver\r\n            android:name=\".other.JpushReceiver\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"cn.jpush.android.intent.RECEIVE_MESSAGE\" />\r\n                <category android:name=\"${applicationId}\" />\r\n            </intent-filter>\r\n        </receiver> <!-- since 3.3.0 Required SDK核心功能 -->\r\n        <activity\r\n            android:name=\"cn.jpush.android.service.JNotifyActivity\"\r\n            android:exported=\"false\"\r\n            android:taskAffinity=\"jpush.custom\"\r\n            android:theme=\"@android:style/Theme.Translucent.NoTitleBar\">\r\n            <intent-filter>\r\n                <action android:name=\"cn.jpush.android.intent.JNotifyActivity\" />\r\n\r\n                <category android:name=\"${applicationId}\" />\r\n            </intent-filter>\r\n        </activity> <!-- since 3.3.0 Required SDK 核心功能 -->\r\n        <!-- 可配置android:process参数将PushService放在其他进程中 -->\r\n        <!-- User defined.  For test only 继承自cn.jpush.android.service.JCommonService -->\r\n        <service\r\n            android:name=\".other.JpushService\"\r\n            android:exported=\"false\"\r\n            android:enabled=\"true\"\r\n            android:process=\":pushcore\">\r\n            <intent-filter>\r\n                <action android:name=\"cn.jiguang.user.service.action\" />\r\n            </intent-filter>\r\n        </service>\r\n        <receiver android:name=\"cn.jpush.im.android.helpers.IMReceiver\" android:exported=\"false\" android:enabled=\"true\"/>\r\n        <service android:name=\".my.MyDataService\" />\r\n        <!-- Required SDK 核心功能-->\r\n        <!-- 可配置android:process参数将PushService放在其他进程中 -->\r\n        <meta-data\r\n            android:name=\"JPUSH_CHANNEL\"\r\n            android:value=\"developer-default\" />\r\n        <meta-data\r\n            android:name=\"JPUSH_APPKEY\"\r\n            android:value=\"7153b7916be94ab289793e76\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 13dd9bb9be8ed31a954512809ab74316113ee12a)
+++ app/src/main/AndroidManifest.xml	(date 1607847229769)
@@ -102,8 +102,10 @@
         <activity android:name=".MainActivity">
         </activity>
         <activity android:name=".my.AcountManage"/>
-        <activity android:name=".forum.New_post_detail"/>
-<activity android:name=".my.AcountManage"/>
+        <activity android:name=".forum.New_post_detail"
+            tools:ignore="DuplicateActivity" />
+<activity android:name=".my.AcountManage"
+    tools:ignore="DuplicateActivity" />
         <meta-data
             android:name="com.baidu.lbsapi.API_KEY"
             android:value="Gy6t4iVa5bjCYSlblHYFLNKNCFmABmH3" />
@@ -126,7 +128,8 @@
         </provider>
         <provider android:name="cn.jpush.im.android.helpers.ipc.IMProvider"
             android:exported="false"
-            android:authorities="com.example.pet.jpushim.IMProvider"/>
+            android:authorities="com.example.pet.jpushim.IMProvider"
+            tools:ignore="MissingClass" />
         <activity
             android:name=".LoadingActivity"
             android:windowSoftInputMode="adjustPan">
@@ -210,7 +213,7 @@
                 <action android:name="cn.jiguang.user.service.action" />
             </intent-filter>
         </service>
-        <receiver android:name="cn.jpush.im.android.helpers.IMReceiver" android:exported="false" android:enabled="true"/>
+
         <service android:name=".my.MyDataService" />
         <!-- Required SDK 核心功能-->
         <!-- 可配置android:process参数将PushService放在其他进程中 -->
Index: app/src/main/java/com/example/pet/my/PetActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.my;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.IBinder;\r\nimport android.os.Message;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bigkoo.pickerview.builder.OptionsPickerBuilder;\r\nimport com.bigkoo.pickerview.listener.CustomListener;\r\nimport com.bigkoo.pickerview.listener.OnOptionsSelectListener;\r\nimport com.bigkoo.pickerview.view.OptionsPickerView;\r\nimport com.example.pet.R;\r\nimport com.example.pet.my.editinfo.Const;\r\nimport com.example.pet.my.editinfo.GlideEngine;\r\nimport com.example.pet.other.Cache;\r\nimport com.example.pet.other.entity.Pet;\r\nimport com.google.gson.Gson;\r\nimport com.luck.picture.lib.PictureSelector;\r\nimport com.luck.picture.lib.config.PictureConfig;\r\nimport com.luck.picture.lib.config.PictureMimeType;\r\nimport com.luck.picture.lib.entity.LocalMedia;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\npublic class PetActivity extends AppCompatActivity {\r\n    private Uri imageUri;\r\n    public static final int TAKE_PHOTO=1;\r\n    private List<String> list = new ArrayList<String>();\r\n    private Spinner spinner;\r\n    private ArrayAdapter<String> adapter;\r\n    private Toolbar toolbar;\r\n\r\n\r\n\r\n    private ImageView petPhoto;\r\n    private EditText petName;\r\n    private TextView petType;\r\n    private TextView petAge;\r\n    private EditText petAutograph;\r\n    private Button btnUpdate;\r\n    private TextView tvNum;\r\n    private int index;\r\n    private Pet pet;\r\n    private int agex;\r\n    private Bitmap bitmap;\r\n\r\n\r\n    private OptionsPickerView pvAgeOptions;\r\n    private OptionsPickerView pvTypeOptions;\r\n    private ArrayList<Integer> ageItem = new ArrayList<>();\r\n    private ArrayList<String> typeItem = new ArrayList<>();\r\n    //输入框初始值\r\n    private int num = 0;\r\n    //输入框最大值\r\n    public int mMaxNum=200;\r\n    private String image_path;\r\n    private static final int REQUEST_EXTERNAL_STORAGE = 1;\r\n    private static String[] PERMISSIONS_STORAGE = {\r\n            \"android.permission.READ_EXTERNAL_STORAGE\",\r\n            \"android.permission.WRITE_EXTERNAL_STORAGE\",\r\n            \"android.permission.CAMER\"};\r\n\r\n    Handler hd = new Handler() {\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n            if(msg.what == 1){\r\n                Toast.makeText(PetActivity.this,\"上传成功\",Toast.LENGTH_SHORT);\r\n                upData();\r\n            }else if(msg.what == 2){\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(PetActivity.this,\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 3){\r\n              //  pet.setPicture(bitmap);\r\n                Cache.myPetList.add(pet);\r\n                Toast.makeText(PetActivity.this,\"上传成功\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 4) {\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(PetActivity.this,\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }else if(msg.what == 5){\r\n                Uri uri = Uri.parse(msg.obj.toString());\r\n                bitmap = BitmapFactory.decodeFile(image_path);\r\n                petPhoto.setImageBitmap(bitmap);\r\n                //                petPhoto.setImageURI(uri);\r\n            }else if(msg.what == 6) {\r\n                Log.e(\"up\",\"6b\");\r\n                Toast.makeText(PetActivity.this,\"上传失败了\",Toast.LENGTH_SHORT);\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_add_pet);\r\n        if (Build.VERSION.SDK_INT >= 21) {   //只有5.0及以上系统才支持，因此这里先进行了一层if判断\r\n            View decorView = getWindow().getDecorView();\r\n            int option = View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE    //设置为全屏显示，必须这两行代码一起才能生效\r\n                    | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;  //因为背景为浅色，设置通知栏字体颜色为深色\r\n            decorView.setSystemUiVisibility(option);\r\n            getWindow().setStatusBarColor(Color.TRANSPARENT);//设置为透明\r\n        }\r\n        upAge();\r\n        upType();\r\n        setViewContent();\r\n    }\r\n\r\n    private void setViewContent() {\r\n        //设置\r\n        pet = new Pet();\r\n        initAge();\r\n        initType();\r\n        Log.e(\"upAge\", \"绑定成功\");\r\n        petPhoto = findViewById(R.id.pet_photo1);\r\n        petName = findViewById(R.id.pet_name1);\r\n        petType = findViewById(R.id.pet_type1);\r\n        petAge = findViewById(R.id.pet_age1);\r\n        petAutograph = findViewById(R.id.pet_autograph1);\r\n        btnUpdate = findViewById(R.id.pet_add);\r\n        tvNum = findViewById(R.id.tv_input1);\r\n        countWords();\r\n\r\n    }\r\n\r\n\r\n    public void initAge(){\r\n        for(int i = 1;i < 30;i++){\r\n            ageItem.add(i);\r\n        }\r\n    }\r\n    public void initType(){\r\n        typeItem.add(\"哈士奇\");\r\n        typeItem.add(\"兔子\");\r\n        typeItem.add(\"加菲猫\");\r\n        typeItem.add(\"小白鼠\");\r\n        typeItem.add(\"无皮猫\");\r\n        typeItem.add(\"土狗\");\r\n        typeItem.add(\"仓鼠\");\r\n    }\r\n\r\n\r\n    /**\r\n     * 记录字数和限制最大输入字数\r\n     */\r\n    private void countWords() {\r\n        petAutograph.addTextChangedListener(new TextWatcher() {\r\n            //记录输入的字数\r\n            private CharSequence wordNum;\r\n            private int selectionStart;\r\n            private int selectionEnd;\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n                wordNum = s;\r\n                //判断大于最大值\r\n                if (wordNum.length() > mMaxNum) {\r\n                    int tempSelection = selectionEnd;\r\n                    petAutograph.setText(s);\r\n                    petAutograph.setSelection(tempSelection);//设置光标在最后\r\n                    //吐司最多输入300字\r\n                    Toast.makeText(PetActivity.this, \"最多输入\"+mMaxNum+\"字\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                //实时记录输入的字数\r\n                wordNum= s;\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                int number = num + s.length();\r\n                //TextView显示剩余字数\r\n                tvNum.setText(\"\" + number+\"/\" + mMaxNum);\r\n                selectionStart=petAutograph.getSelectionStart();\r\n                selectionEnd = petAutograph.getSelectionEnd();\r\n                //判断大于最大值\r\n                if (wordNum.length() > mMaxNum) {\r\n                    //删除多余输入的字（不会显示出来）\r\n                    s.delete(selectionStart - 1, selectionEnd);\r\n                    int tempSelection = selectionEnd;\r\n                    petAutograph.setText(s);\r\n                    petAutograph.setSelection(tempSelection);//设置光标在最后\r\n                    //吐司最多输入300字\r\n                    Toast.makeText(PetActivity.this, \"最多输入\"+mMaxNum+\"字\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void close(View view) {\r\n        PetActivity.this.finish();\r\n    }\r\n\r\n    /**\r\n     * 上传图片\r\n     * 未测试\r\n     */\r\n    public void upPhoto(String path) {\r\n        pet.setPicturePath(image_path);\r\n        Log.e(\"up\", \"1\");\r\n        File file = new File(path);\r\n        Log.e(\"up\", \"2\");\r\n        String url = Cache.MY_URL + \"UpDataPetInfoServlet\";\r\n        OkHttpClient okHttpClient = new OkHttpClient();\r\n        if (file != null && file.exists()) {\r\n            RequestBody requestBody = new MultipartBody.Builder()\r\n                    .setType(MultipartBody.FORM)\r\n                    .addFormDataPart(\"file\",\r\n                            Cache.userPhone +\"\" + Cache.myPetList.size() + \".jpg\",\r\n                            RequestBody.create(MediaType.parse(\"image/png\"), file))\r\n                    .build();\r\n            Request request = new Request.Builder()\r\n                    .url(url)\r\n                    .post(requestBody)\r\n                    .build();\r\n            Call call = okHttpClient.newCall(request);\r\n\r\n            Log.e(\"up\", \"3\");\r\n            call.enqueue(new Callback() {\r\n                @Override\r\n                public void onFailure(Call call, IOException e) {\r\n                    //失败\r\n                    Log.e(\"up\", \"4b\");\r\n                    Message msg = new Message();\r\n                    msg.what = 2;\r\n                    msg.obj = 1;\r\n                    Log.e(\"up\", \"5b\");\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"up\", \"6b\");\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                @Override\r\n                public void onResponse(Call call, Response response) throws IOException {\r\n                    //上传成功\r\n                    Log.e(\"up\", \"4a\");\r\n                    Message msg = new Message();\r\n                    String res = response.body().string();\r\n                    if (res.equals(\"true\")) {\r\n                        msg.what = 1;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\", res);\r\n                    } else {\r\n                        msg.what = 2;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\", res);\r\n                    }\r\n                    hd.sendMessage(msg);\r\n\r\n                }\r\n            });\r\n\r\n        } else {\r\n            Toast.makeText(PetActivity.this, \"请添加头像\", Toast.LENGTH_SHORT);\r\n        }\r\n    }\r\n    private void upData() {\r\n        String type = petType.getText().toString();\r\n//        String age = petAge.getText().toString();\r\n        String autograph = petAutograph.getText().toString();\r\n        String name = petName.getText().toString();\r\n        Log.e(\"type:\",type);\r\n        Log.e(\"age\",agex+\"岁\");\r\n        Log.e(\"autogragh:\",autograph);\r\n        Log.e(\"name:\",name);\r\n        if(image_path != null &&  type != null && agex != 0 && autograph != null && name != null){\r\n            //发送\r\n//            pet.setPetId(Cache.myPetList.get(index).getPetId());\r\n            pet.setPicturePath(Cache.userPhone +\"\"+ Cache.myPetList.size()+ \".jpg\");\r\n            pet.setPetType(type);\r\n            pet.setPetAutograph(autograph);\r\n            pet.setPetName(name);\r\n            pet.setPetAge(agex);\r\n            pet.setUserId(Cache.user.getUserId());\r\n            Log.e(\"pet\",pet.toString());\r\n            String str = new Gson().toJson(pet);\r\n            Log.e(\"petStr\",str);\r\n            OkHttpClient okHttpClient = new OkHttpClient();\r\n\r\n            RequestBody requestBody = RequestBody.create(MediaType.parse(\r\n                    \"text/plain;charset=UTF-8\"),str);\r\n            //3.创建请求对象\r\n            Request request = new Request.Builder()\r\n                    .post(requestBody)\r\n                    .url(Cache.MY_URL + \"AddPetServlet\")\r\n                    .build();\r\n            //3.创建Call对象，发送请求，并接受响应\r\n            Call call = okHttpClient.newCall(request);\r\n            //异步网络请求（无需手动使用子线程）\r\n            call.enqueue(new Callback() {\r\n                @Override\r\n                public void onFailure(Call call, IOException e) {\r\n                    //失败\r\n                    Message msg = new Message();\r\n                    msg.what = 4;\r\n                    msg.obj = 3;\r\n                    Log.e(\"up\",\"5b\");\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"up\",\"6b\");\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                @Override\r\n                public void onResponse(Call call, Response response) throws IOException {\r\n                    //上传成功\r\n                    Message msg = new Message();\r\n                    String res = response.body().string();\r\n                    if(res.equals(\"true\")){\r\n                        msg.what = 3;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\",res);\r\n                    }else {\r\n                        msg.what = 2;\r\n                        msg.obj = 1;\r\n                        Log.e(\"updata\",res);\r\n                    }\r\n                    hd.sendMessage(msg);\r\n\r\n                }\r\n            });\r\n        }else {\r\n            Toast.makeText(PetActivity.this,\"有信息未填，请填写！\",Toast.LENGTH_SHORT);\r\n        }\r\n    }\r\n\r\n\r\n    public void onClicked(View view) {\r\n        switch (view.getId()){\r\n            case R.id.btn_close_add_pet:\r\n                PetActivity.this.finish();\r\n                break;\r\n            case R.id.ll_pet_type1:\r\n                pvTypeOptions.show();\r\n                break;\r\n            case R.id.ll_pet_age1:\r\n                pvAgeOptions.show();\r\n                break;\r\n            case R.id.pet_photo1:\r\n                upPic();\r\n                break;\r\n            case R.id.pet_add:\r\n//                upData();\r\n                String type = petType.getText().toString();\r\n//        String age = petAge.getText().toString();\r\n                String autograph = petAutograph.getText().toString();\r\n                String name = petName.getText().toString();\r\n                Log.e(\"type:\",type);\r\n                Log.e(\"age\",agex+\"岁\");\r\n                Log.e(\"autogragh:\",autograph);\r\n                Log.e(\"name:\",name);\r\n                if(image_path != null){\r\n                    upPhoto(image_path);\r\n                }/*else {\r\n                    upData();\r\n                }*/\r\n                break;\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private void upType() {\r\n        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\r\n        // 具体可参考demo 里面的两个自定义布局\r\n        Log.e(\"upAge\",\"start\");\r\n        pvTypeOptions = new OptionsPickerBuilder(PetActivity.this, new OnOptionsSelectListener() {\r\n            @Override\r\n            public void onOptionsSelect(int options1, int options2, int options3, View v) {\r\n                //返回的分别是三个级别的选中位置\r\n                String tx = typeItem.get(options1);\r\n                petType.setText(tx);\r\n                Log.e(\"type:::::::::::::\",tx);\r\n            }\r\n        })\r\n                .setLayoutRes(R.layout.picker_sex_bg, new CustomListener() {\r\n                    @Override\r\n                    public void customLayout(View v) {\r\n                        //自定义布局中的控件初始化及事件处理\r\n                        final TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n                        TextView tvCancel = v.findViewById(R.id.tv_cancel);\r\n                        TextView tyTitle = v.findViewById(R.id.tv_title);\r\n                        tyTitle.setText(\"宠物种类\");\r\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvTypeOptions.returnData();\r\n                                pvTypeOptions.dismiss();\r\n                            }\r\n                        });\r\n                        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvTypeOptions.dismiss();\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .setLineSpacingMultiplier(1.5f)//滚轮字体间距\r\n                .setContentTextSize(22)//字体大小\r\n                .setOutSideCancelable(true)\r\n                .build();\r\n        pvTypeOptions.setPicker(typeItem);//添加数据\r\n    }\r\n\r\n//    private void upType() {\r\n//        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\r\n//        // 具体可参考demo 里面的两个自定义布局\r\n//        Log.e(\"upAge\",\"start\");\r\n//        pvTypeOptions = new OptionsPickerBuilder(PetActivity.this, new OnOptionsSelectListener() {\r\n//            @Override\r\n//            public void onOptionsSelect(int options1, int options2, int options3, View v) {\r\n//                //返回的分别是三个级别的选中位置\r\n//                String tx = typeItem.get(options1);\r\n//                petType.setText(tx);\r\n//                Log.e(\"type:::::::::::::\",tx);\r\n//            }\r\n//        })\r\n//                .setLayoutRes(R.layout.picker_sex_bg, new CustomListener() {\r\n//                    @Override\r\n//                    public void customLayout(View v) {\r\n//                        //自定义布局中的控件初始化及事件处理\r\n//                        final TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n//                        TextView tvCancel = v.findViewById(R.id.tv_cancel);\r\n//                        TextView tyTitle = v.findViewById(R.id.tv_title);\r\n//                        tyTitle.setText(\"宠物种类\");\r\n//                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n//                            @Override\r\n//                            public void onClick(View v) {\r\n//                                pvTypeOptions.returnData();\r\n//                                pvTypeOptions.dismiss();\r\n//                            }\r\n//                        });\r\n//                        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n//                            @Override\r\n//                            public void onClick(View v) {\r\n//                                pvTypeOptions.dismiss();\r\n//                            }\r\n//                        });\r\n//\r\n//                    }\r\n//                })\r\n//                .setLineSpacingMultiplier(1.5f)//滚轮字体间距\r\n//                .setContentTextSize(22)//字体大小\r\n//                .setOutSideCancelable(true)\r\n//                .build();\r\n//        pvTypeOptions.setPicker(typeItem);//添加数据\r\n//    }\r\n\r\n    private void upAge() {\r\n        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\r\n        // 具体可参考demo 里面的两个自定义布局\r\n        Log.e(\"upAge\",\"start\");\r\n        pvAgeOptions = new OptionsPickerBuilder(this, new OnOptionsSelectListener() {\r\n            @Override\r\n            public void onOptionsSelect(int options1, int options2, int options3, View v) {\r\n                //返回的分别是三个级别的选中位置\r\n                int tx = ageItem.get(options1);\r\n                petAge.setText(tx + \"岁\");\r\n                agex = tx;\r\n            }\r\n        })\r\n                .setLayoutRes(R.layout.picker_sex_bg, new CustomListener() {\r\n                    @Override\r\n                    public void customLayout(View v) {\r\n                        //自定义布局中的控件初始化及事件处理\r\n                        final TextView tvSubmit = v.findViewById(R.id.tv_finish);\r\n                        TextView tvCancel = v.findViewById(R.id.tv_cancel);\r\n                        TextView tyTitle = v.findViewById(R.id.tv_title);\r\n                        tyTitle.setText(\"宠物年龄\");\r\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvAgeOptions.returnData();\r\n                                pvAgeOptions.dismiss();\r\n                            }\r\n                        });\r\n                        tvCancel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View v) {\r\n                                pvAgeOptions.dismiss();\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                })\r\n                .setLineSpacingMultiplier(1.5f)//滚轮字体间距\r\n                .setContentTextSize(22)//字体大小\r\n                .setOutSideCancelable(true)\r\n                .build();\r\n        pvAgeOptions.setPicker(ageItem);//添加数据\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加相片\r\n     */\r\n    private void upPic() {\r\n        //动态申请权限\r\n        verifyStoragePermissions(PetActivity.this);\r\n        PictureSelector.create(this)\r\n                .openGallery(PictureConfig.TYPE_IMAGE)\r\n                .imageEngine(GlideEngine.createGlideEngine())\r\n                .imageSpanCount(4)// 每行显示个数 int\r\n                .maxSelectNum(1)\r\n                .isWeChatStyle(true)\r\n                .selectionMode(PictureConfig.SINGLE)// 多选 or 单选 PictureConfig.MULTIPLE or PictureConfig.SINGLE\r\n                .isSingleDirectReturn(true)//PictureConfig.SINGLE模式下是否直接返回\r\n                .isPreviewImage(true)// 是否可预览图片 true or false\r\n                .isCamera(true)// 是否显示拍照按钮 true or false\r\n                .imageFormat(PictureMimeType.JPEG)// 拍照保存图片格式后缀,默认jpeg\r\n                .isZoomAnim(true)// 图片列表点击 缩放效果 默认true\r\n                .setOutputCameraPath(Const.getImgPath())// 自定义拍照保存路径,可不填\r\n                .isEnableCrop(true)// 是否裁剪 true or false\r\n                .isCompress(true)// 是否压缩 true or false\r\n                .compressSavePath(Const.getImgPath())//压缩图片保存地址\r\n                .freeStyleCropEnabled(true)// 裁剪框是否可拖拽 true or false\r\n                .showCropGrid(true)// 是否显示裁剪矩形网格 圆形裁剪时建议设为false    true or false\r\n                .synOrAsy(false)\r\n                .forResult(PictureConfig.CHOOSE_REQUEST);//结果回调onActivityResult code\r\n    }\r\n\r\n    //接受回调\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == -1 && data != null) {\r\n            switch (requestCode) {\r\n                case PictureConfig.CHOOSE_REQUEST:\r\n                    List<LocalMedia> selectList = PictureSelector.obtainMultipleResult(data);\r\n                    image_path = selectList.get(0).getCompressPath();\r\n                    Message msg = new Message();\r\n                    msg.what = 5;\r\n                    msg.obj = image_path;\r\n                    hd.sendMessage(msg);\r\n                    Log.e(\"image_path\",image_path);\r\n                    //上传图片\r\n                    Cache.myPetList.get(index).setPicturePath(image_path);\r\n//                    Cache.user.setPicturePath(image_path);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //然后通过一个函数来申请权限\r\n    public static void verifyStoragePermissions(Activity activity) {\r\n        try {\r\n            //检测是否有写的权限\r\n            int permission = ActivityCompat.checkSelfPermission(activity,\r\n                    \"android.permission.WRITE_EXTERNAL_STORAGE\");\r\n            if (permission != PackageManager.PERMISSION_GRANTED) {\r\n                // 没有写的权限，去申请写的权限，会弹出对话框\r\n                ActivityCompat.requestPermissions(activity, PERMISSIONS_STORAGE,REQUEST_EXTERNAL_STORAGE);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 隐藏键盘\r\n     * @param ev\r\n     * @return\r\n     */\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent ev) {\r\n        if (ev.getAction() == MotionEvent.ACTION_DOWN) {\r\n            View v = getCurrentFocus();\r\n            if (isShouldHideKeyboard(v, ev)) {\r\n                hideKeyboard(v.getWindowToken());\r\n            }\r\n        }\r\n        return super.dispatchTouchEvent(ev);\r\n    }\r\n\r\n    /**\r\n     * 根据EditText所在坐标和用户点击的坐标相对比，来判断是否隐藏键盘，因为当用户点击EditText时则不能隐藏\r\n     *\r\n     * @param v\r\n     * @param event\r\n     * @return\r\n     */\r\n    private boolean isShouldHideKeyboard(View v, MotionEvent event) {\r\n        if (v != null && (v instanceof EditText)) {\r\n            int[] l = {0, 0};\r\n            v.getLocationInWindow(l);\r\n            int left = l[0],\r\n                    top = l[1],\r\n                    bottom = top + v.getHeight(),\r\n                    right = left + v.getWidth();\r\n            if (event.getX() > left && event.getX() < right\r\n                    && event.getY() > top && event.getY() < bottom) {\r\n                // 点击EditText的事件，忽略它。\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        // 如果焦点不是EditText则忽略，这个发生在视图刚绘制完，第一个焦点不在EditText上，和用户用轨迹球选择其他的焦点\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取InputMethodManager，隐藏软键盘\r\n     * @param token\r\n     */\r\n    private void hideKeyboard(IBinder token) {\r\n        if (token != null) {\r\n            InputMethodManager im = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            im.hideSoftInputFromWindow(token, InputMethodManager.HIDE_NOT_ALWAYS);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        initAge();\r\n        initType();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/my/PetActivity.java	(revision 13dd9bb9be8ed31a954512809ab74316113ee12a)
+++ app/src/main/java/com/example/pet/my/PetActivity.java	(date 1607847229776)
@@ -111,7 +111,7 @@
                 Toast.makeText(PetActivity.this,"上传失败了",Toast.LENGTH_SHORT);
             }else if(msg.what == 3){
               //  pet.setPicture(bitmap);
-                Cache.myPetList.add(pet);
+
                 Toast.makeText(PetActivity.this,"上传成功",Toast.LENGTH_SHORT);
             }else if(msg.what == 4) {
                 Log.e("up","6b");
@@ -250,7 +250,7 @@
             RequestBody requestBody = new MultipartBody.Builder()
                     .setType(MultipartBody.FORM)
                     .addFormDataPart("file",
-                            Cache.userPhone +"" + Cache.myPetList.size() + ".jpg",
+                            Cache.userPhone +"" +pet.getPetId() + ".jpg",
                             RequestBody.create(MediaType.parse("image/png"), file))
                     .build();
             Request request = new Request.Builder()
@@ -310,7 +310,7 @@
         if(image_path != null &&  type != null && agex != 0 && autograph != null && name != null){
             //发送
 //            pet.setPetId(Cache.myPetList.get(index).getPetId());
-            pet.setPicturePath(Cache.userPhone +""+ Cache.myPetList.size()+ ".jpg");
+            pet.setPicturePath(Cache.userPhone +""+ pet.getPetId()+ ".jpg");
             pet.setPetType(type);
             pet.setPetAutograph(autograph);
             pet.setPetName(name);
@@ -579,7 +579,7 @@
                     hd.sendMessage(msg);
                     Log.e("image_path",image_path);
                     //上传图片
-                    Cache.myPetList.get(index).setPicturePath(image_path);
+                 //   Cache.myPetList.get(index).setPicturePath(image_path);
 //                    Cache.user.setPicturePath(image_path);
                     break;
             }
Index: app/src/main/java/com/example/pet/my/Order2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pet.my;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport com.example.pet.MainActivity;\r\nimport com.example.pet.R;\r\nimport com.example.pet.other.Cache;\r\nimport com.example.pet.other.entity.Order;\r\n\r\nimport org.greenrobot.eventbus.EventBus;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.ProtocolException;\r\nimport java.net.URL;\r\n\r\npublic class Order2 extends AppCompatActivity {\r\n    private LinearLayout statusPay;\r\n    private LinearLayout statusRunner;\r\n    private LinearLayout statusCancel;\r\n    private LinearLayout statusComplete;\r\n    private LinearLayout statusUncomplete;\r\n    private LinearLayout orderDeatil;\r\n    private LinearLayout orderExtra;\r\n    private Toolbar toolbar;\r\n\r\n    private TextView finishCount;\r\n    private TextView totalCount;\r\n    private TextView countDetail;\r\n    private TextView countStart;\r\n    private TextView countExtra;\r\n    private TextView orderTime;\r\n    private TextView orderStart;\r\n    private TextView orderEnd;\r\n    private TextView orderAddressee;\r\n    private TextView orderAddresser;\r\n    private TextView orderRemark;\r\n    private TextView orderPet;\r\n    private TextView toolbarTitle;\r\n    private TextView orderFinishStart;\r\n    private TextView orderFinishAddressee;\r\n    private TextView orderFinishEnd;\r\n    private TextView orderFinishAddresser;\r\n    private TextView orderFinishPet;\r\n    private TextView orderFinishRemark;\r\n    private TextView orderFinishRunner;\r\n    private TextView finishId;\r\n    private TextView finishTime;\r\n    private Order order;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_order2);\r\n\r\n\r\n        setView();\r\n        Intent intent = getIntent();\r\n\r\n        order = (Order) intent.getSerializableExtra(\"index\");\r\n        Log.e(\"order\", \"4\");\r\n//        order = new Order();\r\n//        order.setOrderState(\"待接单\");\r\n        setStatus();\r\n\r\n    }\r\n\r\n    private void setStatus() {\r\n        changeView();\r\n        int count = Integer.parseInt(order.getOrderAmount().trim());\r\n        totalCount.setText(count + \"元\");\r\n        if (count > 15) {\r\n            countExtra.setText((count - 15) + \"元\");\r\n            orderExtra.setVisibility(View.VISIBLE);\r\n        }\r\n        orderTime.setText(order.getOrderTime());\r\n        orderFinishRemark.setText(order.getRemarks());\r\n        orderRemark.setText(order.getRemarks());\r\n        orderAddresser.setText(order.getAddresser() + \"  \" + order.getPetShopContact());\r\n        orderFinishAddresser.setText(order.getAddresser() + \"  \" + order.getPetShopContact());\r\n        orderFinishAddressee.setText(order.getAddressee() + \" \" + order.getClientContact());\r\n        orderAddressee.setText(order.getAddressee() + \" \" + order.getClientContact());\r\n        orderPet.setText(order.getPet().getPetName() + order.getPet().getPetWeight());\r\n        orderFinishPet.setText(order.getPet().getPetName() + order.getPet().getPetWeight());\r\n        orderStart.setText(order.getOrderStart());\r\n        orderFinishStart.setText(order.getOrderStart());\r\n        orderEnd.setText(order.getOrderEnd());\r\n        orderFinishEnd.setText(order.getOrderEnd());\r\n        orderFinishRunner.setText(order.getRunnerName());\r\n        finishId.setText(order.getOrderId() + \"\");\r\n        finishTime.setText(order.getOrderTime());\r\n        finishCount.setText(count + \"元\");\r\n    }\r\n\r\n    private void setView() {\r\n        finishCount = findViewById(R.id.order_finish_count);\r\n        finishTime = findViewById(R.id.order_finish_time);\r\n        finishId = findViewById(R.id.order_finish_id);\r\n        orderFinishRunner = findViewById(R.id.order_finish_runner);\r\n        orderExtra = findViewById(R.id.order_count_extra1);\r\n        orderFinishRemark = findViewById(R.id.order_finish_remark);\r\n        orderFinishPet = findViewById(R.id.order_finish_end);\r\n        orderFinishAddresser = findViewById(R.id.order_finish_addrresser);\r\n        orderFinishEnd = findViewById(R.id.order_finish_end);\r\n        orderFinishStart = findViewById(R.id.order_finish_start);\r\n        orderFinishAddressee = findViewById(R.id.order_finish_addrressee);\r\n        countDetail = findViewById(R.id.order_count_detail);\r\n        totalCount = findViewById(R.id.order_total_count);\r\n\r\n        countStart = findViewById(R.id.order_count_start);\r\n        countExtra = findViewById(R.id.order_count_extra);\r\n        orderTime = findViewById(R.id.order_time);\r\n        orderStart = findViewById(R.id.order_start);\r\n        orderEnd = findViewById(R.id.order_end);\r\n        orderAddressee = findViewById(R.id.order_addressee);\r\n        orderAddresser = findViewById(R.id.order_addresser);\r\n        orderRemark = findViewById(R.id.order_remark);\r\n        orderPet = findViewById(R.id.order_pet);\r\n        orderDeatil = findViewById(R.id.order_count_detail1);\r\n        toolbarTitle = findViewById(R.id.order_toolbar_title);\r\n        statusPay = findViewById(R.id.order_wait_pay);\r\n        statusRunner = findViewById(R.id.order_wait_runner);\r\n        statusCancel = findViewById(R.id.order_status_cancel);\r\n        statusComplete = findViewById(R.id.order_status_complete);\r\n        statusUncomplete = findViewById(R.id.order_status_uncomplete);\r\n        toolbar = findViewById(R.id.order_toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Order2.this.finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void onClicked(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.order_btn_cancel:\r\n                orderToCancel();\r\n                break;\r\n            case R.id.order_btn_cancel1:\r\n                orderToCancel();\r\n                break;\r\n            case R.id.order_count_detail:\r\n\r\n                if (countDetail.getText().toString().equals(\"展开详情\")) {\r\n\r\n                    countDetail.setText(\"收起详情\");\r\n                    orderDeatil.setVisibility(View.VISIBLE);\r\n                } else if (countDetail.getText().toString().equals(\"收起详情\")) {\r\n                    countDetail.setText(\"展开详情\");\r\n                    Log.e(\"Order2\", \"展开\");\r\n                    orderDeatil.setVisibility(View.GONE);\r\n                }\r\n\r\n                break;\r\n            case R.id.order_start_connect:\r\n                callStart();\r\n                break;\r\n            case R.id.order_end_connect:\r\n                callEnd();\r\n                break;\r\n            case R.id.tv_pay_now:\r\n                //跳转支付页面\r\n                break;\r\n            case R.id.order_readd:\r\n                newOrder();\r\n                break;\r\n            case R.id.order_readd1:\r\n                newOrder();\r\n                break;\r\n            case R.id.order_finish_end_connect:\r\n                callEnd();\r\n                break;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void changeState() {\r\n\r\n\r\n        new Thread() {\r\n            @Override\r\n            public void run() {\r\n                URL url = null;\r\n                try {\r\n                    url = new URL(Cache.MY_URL+ \"ChangeState?state=已取消&orderId=\" +order.getOrderId());\r\n                    HttpURLConnection conn = (HttpURLConnection) url.openConnection();\r\n                    conn.setRequestMethod(\"GET\");\r\n                    InputStream inputStream = conn.getInputStream();\r\n                    inputStream.close();\r\n                } catch (MalformedURLException e) {\r\n                    e.printStackTrace();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }.start();\r\n        order.setOrderState(\"已取消\");\r\n        for (int i=0;i<Cache.myOrderList.size();i++){\r\n            if(Cache.myOrderList.get(i).getOrderId()==order.getOrderId()){\r\n                Cache.myOrderList.get(i).setOrderState(\"已取消\");\r\n            }\r\n        }\r\n        EventBus.getDefault().post(\"更新\");\r\n        changeView();\r\n    }\r\n\r\n    public void changeView() {\r\n        switch (order.getOrderState()) {\r\n            case \"已取消\":\r\n                toolbarTitle.setText(\"已取消\");\r\n                statusComplete.setVisibility(View.GONE);\r\n                statusCancel.setVisibility(View.VISIBLE);\r\n                statusRunner.setVisibility(View.INVISIBLE);\r\n                statusPay.setVisibility(View.INVISIBLE);\r\n                break;\r\n            case \"待支付\":\r\n                toolbarTitle.setText(\"待支付\");\r\n                statusComplete.setVisibility(View.GONE);\r\n                statusCancel.setVisibility(View.INVISIBLE);\r\n                statusRunner.setVisibility(View.INVISIBLE);\r\n                statusPay.setVisibility(View.VISIBLE);\r\n                break;\r\n            case \"待接单\":\r\n                toolbarTitle.setText(\"待接单\");\r\n                statusComplete.setVisibility(View.GONE);\r\n                statusCancel.setVisibility(View.INVISIBLE);\r\n                statusRunner.setVisibility(View.VISIBLE);\r\n                statusPay.setVisibility(View.INVISIBLE);\r\n                break;\r\n            case \"已完成\":\r\n                toolbarTitle.setText(\"已完成\");\r\n                statusComplete.setVisibility(View.VISIBLE);\r\n                statusUncomplete.setVisibility(View.GONE);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //取消订单\r\n    private void orderToCancel() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setMessage(\"确定取消订单\");\r\n        builder.setPositiveButton(\"确定取消\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                changeState();\r\n            }\r\n        });\r\n\r\n\r\n        builder.setNegativeButton(\"再等等\", null);\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n    //重新下单\r\n    private void newOrder() {\r\n        Intent intent2 = new Intent(this, MainActivity.class);\r\n        startActivity(intent2);\r\n    }\r\n\r\n    //致电起点\r\n    private void callStart() {\r\n        Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse(\"tel:\" + order.getClientContact()));\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void callEnd() {\r\n        Intent intent1 = new Intent(Intent.ACTION_DIAL, Uri.parse(\"tel:\" + order.getPetShopContact()));\r\n        intent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        startActivity(intent1);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        EventBus.getDefault().unregister(this);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pet/my/Order2.java	(revision 13dd9bb9be8ed31a954512809ab74316113ee12a)
+++ app/src/main/java/com/example/pet/my/Order2.java	(date 1607847229761)
@@ -214,11 +214,6 @@
             }
         }.start();
         order.setOrderState("已取消");
-        for (int i=0;i<Cache.myOrderList.size();i++){
-            if(Cache.myOrderList.get(i).getOrderId()==order.getOrderId()){
-                Cache.myOrderList.get(i).setOrderState("已取消");
-            }
-        }
         EventBus.getDefault().post("更新");
         changeView();
     }
